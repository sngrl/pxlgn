"namespace IPS\\Theme;\nclass class_core_admin_members\n{\n\t\t\tfunction acpRestrictions( $current, $restrictions, $row ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n<form accept-charset='utf-8' class=\"ipsForm_horizontal\" action=\"\nCONTENT;\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=staff&controller=admin&do=save&id={$row['row_id']}&type={$row['row_id_type']}\", null, \"\", array(), 0 ) );\n$return .= <<<CONTENT\n\" method=\"post\">\n\t<div class='ipsTabs ipsClearfix ipsJS_show acpFormTabBar' id='elRestrictions_tab' data-ipsTabBar data-ipsTabBar-contentArea=\"#elRestrictions_content\">\n\t\t<ul role=\"tablist\">\n\t\t\t\nCONTENT;\n\nforeach ( $restrictions['applications'] as $appKey => $appId ):\n$return .= <<<CONTENT\n\n\t\t\t\t<li role=\"presentation\"><a class=\"ipsTabs_item \nCONTENT;\n\nif ( $appKey === 'core' ):\n$return .= <<<CONTENT\nipsTabs_activeItem\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\" id='\nCONTENT;\n$return .= htmlentities( $appId, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_tab_\nCONTENT;\n$return .= htmlentities( $appKey, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' href='#ipsTabs_elRestrictions_tab_\nCONTENT;\n$return .= htmlentities( $appId, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_tab_\nCONTENT;\n$return .= htmlentities( $appKey, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_panel'>\nCONTENT;\n$val = \"__app_$appKey\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t<\/ul>\n\t<\/div>\n\t<div class='acpFormTabContent' id='elRestrictions_content'>\n\t\t\nCONTENT;\n\nforeach ( $restrictions['applications'] as $appKey => $appId ):\n$return .= <<<CONTENT\n\n\t\t\t<div id='ipsTabs_elRestrictions_tab_\nCONTENT;\n$return .= htmlentities( $appId, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_tab_\nCONTENT;\n$return .= htmlentities( $appKey, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_panel' class='ipsTabs_panel' aria-labelledby=\"\nCONTENT;\n$return .= htmlentities( $appId, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_tab_\nCONTENT;\n$return .= htmlentities( $appKey, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" aria-hidden=\"\nCONTENT;\n\nif ( $appKey === 'core' ):\n$return .= <<<CONTENT\nfalse\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\ntrue\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\">\t\t\t\n\t\t\t\t<div class='ipsPad' data-controller='core.admin.members.restrictions'>\n\t\t\t\t\t<div class='ipsAreaBackground ipsPad acpAppRestrictions_header'>\n\t\t\t\t\t\t<input type=\"checkbox\" data-ipsToggle name=\"r[applications][]\" id='elRestrict_\nCONTENT;\n$return .= htmlentities( $appKey, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' value=\"\nCONTENT;\n$return .= htmlentities( $appKey, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" \nCONTENT;\n\nif ( $current === '*' or ( isset( $current['applications'] ) and in_array( $appKey, $current['applications'] ) ) ):\n$return .= <<<CONTENT\nchecked=\"checked\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n> &nbsp;&nbsp;<label for='elRestrict_\nCONTENT;\n$return .= htmlentities( $appKey, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'><span class='ipsType_sectionHead'>\nCONTENT;\n$sprintf = array(\\IPS\\Member::loggedIn()->language()->addToStack('__app_' . $appKey )); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'acprestrictions_app', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n<\/span><\/label>\n\t\t\t\t\t<\/div>\n\t\t\t\t\t<br><br>\n\n\t\t\t\t\t<ul id='elRestrictions_root_\nCONTENT;\n$return .= htmlentities( $appId, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_tab_\nCONTENT;\n$return .= htmlentities( $appKey, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='acpAppRestrictions_panel'>\n\t\t\t\t\t\t\nCONTENT;\n\nif ( isset( $restrictions['modules'] ) AND isset( $restrictions['modules'][ $appId ] )  ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\nforeach ( $restrictions['modules'][ $appId ] as $moduleKey => $moduleId ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<li class='ipsPad'>\n\t\t\t\t\t\t\t\t\t<div class=\"acpRestrictions_header\">\n\t\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" data-ipsToggle name=\"r[modules][]\" id='elRestrict_\nCONTENT;\n$return .= htmlentities( $appKey, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_\nCONTENT;\n$return .= htmlentities( $moduleKey, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' value=\"\nCONTENT;\n$return .= htmlentities( $moduleKey, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" \nCONTENT;\n\nif ( $current === '*' or ( isset( $current['modules'] ) and in_array( $moduleKey, $current['modules'] ) ) ):\n$return .= <<<CONTENT\nchecked=\"checked\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n> <h2><label for='elRestrict_\nCONTENT;\n$return .= htmlentities( $appKey, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_\nCONTENT;\n$return .= htmlentities( $moduleKey, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'><strong>\nCONTENT;\n$val = \"menu__{$appKey}_{$moduleKey}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong><\/h2> &nbsp;&nbsp;<span data-role='toggle' class='ipsJS_show'><a href='#' data-action='expandAll'><strong>\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'expand', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong><\/a> \/ <a href='#' data-action='collapseAll'><strong>\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'collapse', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong><\/a><\/span><\/label>\n\t\t\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( isset( $restrictions['items'][ $moduleId ] ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t<ul class=\"acpRestrictions_panel\">\n\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nforeach ( $restrictions['items'][ $moduleId ] as $title => $items ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"acpRestrictions_subHeader acpRestrictions_open ipsType_light\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>\nCONTENT;\n$val = \"r__{$title}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h3> &nbsp;&nbsp;<span data-role='massToggle' class='ipsJS_show'><a href='#' data-action='checkAll'>\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'all', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a> \/  <a href='#' data-action='checkNone'>\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'none', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/a>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nforeach ( $items as $k => $v ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" id='elRestrict_\nCONTENT;\n$return .= htmlentities( $appKey, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_\nCONTENT;\n$return .= htmlentities( $moduleKey, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_\nCONTENT;\n$return .= htmlentities( $k, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-ipsToggle name=\"r[items][\nCONTENT;\n$return .= htmlentities( $appKey, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n][\nCONTENT;\n$return .= htmlentities( $moduleKey, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n][]\" value=\"\nCONTENT;\n$return .= htmlentities( $k, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" \nCONTENT;\n\nif ( $current === '*' or ( isset( $current['items'] ) and array_key_exists( $appKey, $current['items'] ) and array_key_exists( $moduleKey, $current['items'][ $appKey ] ) and in_array( $k, $current['items'][ $appKey ][ $moduleKey ] ) ) ):\n$return .= <<<CONTENT\nchecked=\"checked\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n> <label for='elRestrict_\nCONTENT;\n$return .= htmlentities( $appKey, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_\nCONTENT;\n$return .= htmlentities( $moduleKey, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_\nCONTENT;\n$return .= htmlentities( $k, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\nCONTENT;\n$val = \"r__{$v}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t<\/ul>\n\t\t\t\t\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t<\/ul>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/ul>\t\t\n\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t<\/div>\n\t<div class=\"ipsAreaBackground_light ipsClearfix ipsPad ipsType_center\">\n\t\t<button class=\"ipsButton ipsButton_primary\" role=\"button\" type=\"submit\">\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'save', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/button>\n\t<\/div>\n<\/form>\nCONTENT;\n\t\treturn $return;\n}\n\n\tfunction adminDetails( $details ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div class='ipsColumns ipsPad'>\n\t<div class='ipsColumn ipsColumn_narrow ipsResponsive_hidePhone'>\n\t\t<div class='ipsPad ipsType_center'>\n\t\t\t\nCONTENT;\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->userPhoto( \\IPS\\Member::loggedIn(), 'medium' );\n$return .= <<<CONTENT\n\n\t\t<\/div>\n\t<\/div>\n\t<div class='ipsColumn ipsColumn_fluid'>\n\t\t<ul class='ipsDataList'>\n\t\t\t<li class='ipsDataItem ipsClearfix '>\n\t\t\t\t<div class='ipsDataItem_main'>\n\t\t\t\t\t<strong class='ipsDataItem_title'>\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'username', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong>\n\t\t\t\t\t<p class='ipsType_reset'>\n\t\t\t\t\t\t\nCONTENT;\n$return .= htmlentities( $details['username'], ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/p>\n\t\t\t\t<\/div>\n\t\t\t<\/li>\n\t\t\t<li class='ipsDataItem ipsClearfix '>\n\t\t\t\t<div class='ipsDataItem_main'>\n\t\t\t\t\t<strong class='ipsDataItem_title'>\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'email_address', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong>\n\t\t\t\t\t<p class='ipsType_reset'>\n\t\t\t\t\t\t\nCONTENT;\n$return .= htmlentities( $details['email_address'], ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/p>\n\t\t\t\t<\/div>\n\t\t\t\t<p class='ipsDataItem_generic ipsDataItem_size3'>\n\t\t\t\t\t<a href='\nCONTENT;\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=members&controller=members&do=adminEmail\", null, \"\", array(), 0 ) );\n$return .= <<<CONTENT\n' title='\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'change_email_button', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n' class='ipsButton ipsButton_small ipsButton_normal' data-ipsDialog data-ipsDialog-title='\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'change_email_button', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'>\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'change', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t<\/p>\n\t\t\t<\/li>\n\t\t\t<li class='ipsDataItem ipsClearfix '>\n\t\t\t\t<div class='ipsDataItem_main'>\n\t\t\t\t\t<strong class='ipsDataItem_title'>\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'password', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong>\n\t\t\t\t\t<p class='ipsType_reset'>\n\t\t\t\t\t\t<span class='ipsType_light'>\nCONTENT;\n$return .= htmlentities( $details['password'], ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t\t<\/p>\n\t\t\t\t<\/div>\n\t\t\t\t<p class='ipsDataItem_generic ipsDataItem_size3'>\n\t\t\t\t\t<a href='\nCONTENT;\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=members&controller=members&do=adminPassword\", null, \"\", array(), 0 ) );\n$return .= <<<CONTENT\n' title='\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'change_password', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n' class='ipsButton ipsButton_small ipsButton_normal' data-ipsDialog data-ipsDialog-title='\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'change_password', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'>\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'change', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t<\/p>\n\t\t\t<\/li>\n\t\t<\/ul>\n\t<\/div>\n<\/div>\nCONTENT;\n\t\treturn $return;\n}\n\n\tfunction bulkMailPreview( $mail, $members, $count ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n<div class='acpBlock'>\n\t<div class='ipsTabs ipsClearfix ipsJS_show acpFormTabBar' id='tabs_bulkmail' data-ipsTabBar data-ipsTabBar-contentArea='#ipsTabs_content_bulkmail'>\n\t\t<a href='#tabs_bulkmail' data-action='expandTabs'><i class='fa fa-caret-down'><\/i><\/a>\n\t\t<ul role='tablist'>\n\t\t\t<li role='presentation'>\n\t\t\t\t<a href='#ipsTabs_tabs_bulkmail_bulkmail_tab_overview_panel' id='bulkmail_tab_overview' class=\"ipsTabs_item ipsTabs_activeItem\">\n\t\t\t\t\t\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'bm_send_overview', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t<\/a>\n\t\t\t<\/li>\n\t\t\t<li role='presentation'>\n\t\t\t\t<a href='#ipsTabs_tabs_bulkmail_bulkmail_tab_memberlist_panel' id='bulkmail_tab_memberlist' class=\"ipsTabs_item\">\n\t\t\t\t\t\nCONTENT;\n$sprintf = array($count); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'bm_send_recipients', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n\n\t\t\t\t<\/a>\n\t\t\t<\/li>\n\t\t<\/ul>\n\t<\/div>\n\t<div id='ipsTabs_content_bulkmail' class='acpFormTabContent'>\n\t\t<div id='ipsTabs_tabs_bulkmail_bulkmail_tab_overview_panel' class=\"ipsTabs_panel\" aria-labelledby=\"bulkmail_tab_overview\" aria-hidden=\"false\">\n\t\t\t<ul class='ipsForm ipsForm_horizontal'>\n\t\t\t\t<li class='ipsJS_hide'>\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'bm_send_overview', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/li>\n\t\t\t\t<li class='ipsFieldRow ipsPad_half ipsClearfix'>\n\t\t\t\t\t<div class='ipsFieldRow_title'>\n\t\t\t\t\t\t\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'mail_subject', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/div>\n\t\t\t\t\t<div class='ipsFieldRow_content'>\n\t\t\t\t\t\t\nCONTENT;\n$return .= htmlentities( $mail->subject, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/div>\n\t\t\t\t<\/li>\n\t\t\t\t<li class='ipsFieldRow ipsPad_half ipsClearfix'>\n\t\t\t\t\t<div class='ipsFieldRow_title'>\n\t\t\t\t\t\t\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'mail_body', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/div>\n\t\t\t\t\t<div class='ipsFieldRow_content'>\n\t\t\t\t\t\t<iframe seamless src='\nCONTENT;\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=bulkmail&controller=bulkmail&do=iframePreview&id=\", \"admin\", \"\", array(), 0 ) );\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlentities( $mail->id, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' width='100%' height='350'><\/iframe>\n\t\t\t\t\t<\/div>\n\t\t\t\t<\/li>\n\t\t\t<\/ul>\n\t\t<\/div>\n\t\t<div id='ipsTabs_tabs_bulkmail_bulkmail_tab_memberlist_panel' class=\"ipsTabs_panel\" aria-labelledby=\"bulkmail_tab_memberlist\" aria-hidden=\"false\">\n\t\t\t<div class='ipsJS_hide'>\nCONTENT;\n$sprintf = array($count); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'bm_send_recipients', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n<\/div>\n\t\t\t<div class='ipsGrid ipsGrid_collapsePhone'>\n\t\t\t\t\nCONTENT;\n\nforeach ( $members as $_index => $member ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<div class='ipsGrid_span3 ipsPad'>\n\t\t\t\t\t\t<a href='\nCONTENT;\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=members&controller=profile&id={$member['member_id']}\", \"front\", \"profile\", $member['members_seo_name'], 0 ) );\n$return .= <<<CONTENT\n'>\nCONTENT;\n$return .= htmlentities( $member['name'], ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t\t<span class='ipsType_light'>(\nCONTENT;\n$return .= htmlentities( $member['email'], ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n)<\/span>\n\t\t\t\t\t<\/div>\n\t\t\t\t\t\nCONTENT;\n\nif ( $_index > 0 AND ( $_index + 1 ) % 4 == 0 ):\n$return .= <<<CONTENT\n<\/div><div class='ipsGrid ipsGrid_collapsePhone'>\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t<\/div>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"ipsAreaBackground ipsClearfix ipsPad ipsType_center\">\n\t\t<a href='\nCONTENT;\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=bulkmail&controller=bulkmail&do=send&id=\", null, \"\", array(), 0 ) );\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlentities( $mail->id, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsButton ipsButton_primary'>\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'proceed', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t<\/div>\n<\/div>\nCONTENT;\n\t\treturn $return;\n}\n\n\tfunction changePassword( $name, $memberId ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n<div class=\"ipsJS_hide\">\n\t<input name=\"\nCONTENT;\n$return .= htmlentities( $name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" autocomplete=\"off\"><br>\n\t<span class=\"ipsType_light\">\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'members_pass_change', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span>\n<\/div>\n<div class=\"ipsJS_show\">\n\t<span class='ipsType_light'>\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'password_hidden', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span><br>\n\t<a href=\"\nCONTENT;\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=members&controller=members&do=password&id={$memberId}\", null, \"\", array(), 0 ) );\n$return .= <<<CONTENT\n\" data-ipsDialog data-ipsDialog-title=\"\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'change_password', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\">\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'change_password', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n<\/div>\nCONTENT;\n\t\treturn $return;\n}\n\n\tfunction confirmMassAction( $count, $action, $group=NULL ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n<div class='ipsMessage ipsMessage_warning'>\n\t\nCONTENT;\n\nif ( $action === 'prune' ):\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n$sprintf = array($count); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'member_prune_confirm_msg', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n$sprintf = array($count, $group->name); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'member_move_confirm_msg', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n<\/div>\n\nCONTENT;\n\nif ( $action === 'prune' ):\n$return .= <<<CONTENT\n\n\t<div class='ipsPos_center'><a class='ipsButton ipsButton_primary' href='\nCONTENT;\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=members&controller=members&do=doPrune\", null, \"\", array(), 0 ) );\n$return .= <<<CONTENT\n'>\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'continue', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/div>\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t<div class='ipsPos_center'><a class='ipsButton ipsButton_primary' href='\nCONTENT;\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=members&controller=members&do=doMove\", null, \"\", array(), 0 ) );\n$return .= <<<CONTENT\n'>\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'continue', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/div>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\t\treturn $return;\n}\n\n\tfunction editMember( $member, $form, $canEdit, $canSeeIps ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div class='ipsAreaBackground ipsPad ipsPhotoPanel ipsPhotoPanel_large ipsClearfix' id='elEditMemberHeader'>\n\t<a href=\"\nCONTENT;\n$return .= htmlentities( $member->url(), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" class='ipsPos_left'><img src='\nCONTENT;\n$return .= htmlentities( $member->photo, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsUserPhoto ipsUserPhoto_large'><\/a>\n\t<div>\n\t\t<ul class='ipsDataList ipsDataList_reducedSpacing ipsType_normal'>\n\t\t\t<li class='ipsDataItem'>\n\t\t\t\t<span class='ipsDataItem_generic ipsDataItem_size3'><strong>\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'members_joined', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong><\/span>\n\t\t\t\t<span class='ipsDataItem_generic'>\nCONTENT;\n$return .= htmlentities( $member->joined->localeDate(), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n \nCONTENT;\n\nif ( $member->members_bitoptions['validating'] ):\n$return .= <<<CONTENT\n<i class=\"fa fa-warning\"><\/i> <span class=\"ipsType_light ipsType_small\">\nCONTENT;\n$return .= htmlentities( $member->validatingDescription(), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span>\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n<\/span>\n\t\t\t<\/li>\n\t\t\t<li class='ipsDataItem'>\n\t\t\t\t<span class='ipsDataItem_generic ipsDataItem_size3'><strong>\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'members_ip_address', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong><\/span>\n\t\t\t\t<span class='ipsDataItem_generic'>\n\t\t\t\t\t\nCONTENT;\n\nif ( $canSeeIps ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<a href=\"\nCONTENT;\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=members&controller=ip&ip={$member->ip_address}\", null, \"\", array(), 0 ) );\n$return .= <<<CONTENT\n\">\nCONTENT;\n$return .= htmlentities( $member->ip_address, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/a> <a href=\"\nCONTENT;\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=members&controller=members&do=ip&id={$member->member_id}\", null, \"\", array(), 0 ) );\n$return .= <<<CONTENT\n\" class=\"ipsType_light\">(\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'see_all', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n)<\/a>\n\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n$return .= htmlentities( $member->ip_address, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t<\/span>\n\t\t\t<\/li>\n\t\t<\/ul>\n\t<\/div>\n\t\nCONTENT;\n\nif ( $canEdit ):\n$return .= <<<CONTENT\n\n\t\t<ul class=\"ipsControlStrip ipsType_noBreak ipsList_reset ipsPos_left\" id='elEditPhoto'>\n\t\t\t<li class='ipsControlStrip_button'>\n\t\t\t\t<a href=\"\nCONTENT;\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=members&controller=members&do=photo&id={$member->member_id}\", null, \"\", array(), 0 ) );\n$return .= <<<CONTENT\n\" data-ipsDialog data-ipsDialog-title='\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'edit', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n' title=\"\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'edit', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" data-ipsTooltip><i class='ipsControlStrip_icon fa fa-pencil'><\/i><\/a>\n\t\t\t<\/li>\n\t\t\t\nCONTENT;\n\nif ( $member->pp_photo_type === 'custom' ):\n$return .= <<<CONTENT\n\n\t\t\t\t<li class='ipsControlStrip_button'>\n\t\t\t\t\t<a href=\"\nCONTENT;\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=members&controller=members&do=photoResize&id={$member->member_id}\", null, \"\", array(), 0 ) );\n$return .= <<<CONTENT\n\" data-ipsDialog data-ipsDialog-title='\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'member_photo_resize', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n' title=\"\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'member_photo_resize', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" data-ipsTooltip><i class='ipsControlStrip_icon fa fa-arrows-alt'><\/i><\/a>\n\t\t\t\t<\/li>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<\/ul>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n<\/div>\n<br>\n\n{$form}\nCONTENT;\n\t\treturn $return;\n}\n\n\tfunction groupCell( $group, $secondaryGroups ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlentities( $group, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( count( $secondaryGroups ) ):\n$return .= <<<CONTENT\n\n\t<br>\n\t<span class='ipsType_light ipsType_small'>\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'secondary_groups', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n: \nCONTENT;\n$return .= htmlspecialchars( \\IPS\\Member::loggedIn()->language()->formatList( $secondaryGroups ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n \nCONTENT;\n\t\treturn $return;\n}\n\n\tfunction groupPromotion( $name, $value, $groups ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n<div>\n\t\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'move_members_to', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t<select name=\"\nCONTENT;\n$return .= htmlentities( $name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[0][0]\" data-control=\"selectDisable\">\n\t\t<option value=\"-1\" \nCONTENT;\n\nif ( $value[0][0] === -1 ):\n$return .= <<<CONTENT\nselected=\"selected\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n data-disable=\"#group_promote_unit,#group_promote_type\">\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'group_promotion_dont', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/option>\n\t\t\nCONTENT;\n\nforeach ( $groups as $id => $_group ):\n$return .= <<<CONTENT\n\n\t\t\t<option value=\"\nCONTENT;\n$return .= htmlentities( $id, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" \nCONTENT;\n\nif ( $value[0][0] == $id ):\n$return .= <<<CONTENT\nselected=\"selected\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\nCONTENT;\n$return .= htmlentities( $_group->name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/option>\n\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t<\/select>\n\t\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'when_they_reach', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t<input type=\"number\" id=\"group_promote_unit\" name=\"\nCONTENT;\n$return .= htmlentities( $name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[0][1]\" value=\"\nCONTENT;\n\nif ( $value[0][1] != -1 ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlentities( $value[0][1], ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\" min=\"0\" class=\"ipsField_tiny\">\n\t<select name=\"\nCONTENT;\n$return .= htmlentities( $name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[1]\" id=\"group_promote_type\" class=\"ipsField_short\">\n\t\t<option value=\"0\" \nCONTENT;\n\nif ( !$value[1] ):\n$return .= <<<CONTENT\nselected=\"selected\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'approved_posts_comments', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/option>\n\t\t<option value=\"1\" \nCONTENT;\n\nif ( $value[1] ):\n$return .= <<<CONTENT\nselected=\"selected\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'days_since_joining', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/option>\n\t<\/select>\n<\/div>\nCONTENT;\n\t\treturn $return;\n}\n\n\tfunction memberEmailCell( $content ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n<div class='ipsType_break'>\n\t{$content}\n<\/div>\nCONTENT;\n\t\treturn $return;\n}\n\n\tfunction memberSearchResult( $member ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n<div class=\"clearfix clickable\">\n\t<div class=\"left\">\n\t\t\nCONTENT;\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->userPhoto( $member, 'medium' );\n$return .= <<<CONTENT\n\n\t<\/div>\n\t<div class=\"left ipsMemberData\">\n\t\t{$member->group['prefix']}\nCONTENT;\n$return .= htmlentities( $member->name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n{$member->group['suffix']}<br>\n\t\t<span class=\"ipsType_light\">\nCONTENT;\n$return .= htmlentities( $member->email, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span>\n\t<\/div>\n<\/div>\nCONTENT;\n\t\treturn $return;\n}\n\n\tfunction memberValidatingCell( $email, $message ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n<span class=\"ipsType_warning\"><i class=\"fa fa-warning\"><\/i> \nCONTENT;\n$return .= htmlentities( $email, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span><br>\n<span class=\"ipsType_light ipsType_small\">\nCONTENT;\n$return .= htmlentities( $message, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span>\nCONTENT;\n\t\treturn $return;\n}\n\n\tfunction moderationLimits( $name, $value ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'after', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n<input type=\"number\" name=\"\nCONTENT;\n$return .= htmlentities( $name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[0]\" value=\"\nCONTENT;\n\nif ( isset( $value[0] ) ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlentities( $value[0], ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\">\n<select name=\"\nCONTENT;\n$return .= htmlentities( $name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[1]\">\n\t<option value=\"0\" \nCONTENT;\n\nif ( isset( $value[1] ) and !$value[1] ):\n$return .= <<<CONTENT\nselected=\"selected\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'approved_posts_comments', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/option>\n\t<option value=\"1\" \nCONTENT;\n\nif ( isset( $value[1] ) and $value[1] ):\n$return .= <<<CONTENT\nselected=\"selected\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'days_since_joining', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/option>\n<\/select>\n&nbsp; \nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'or', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n &nbsp;\n<input type=\"checkbox\" data-control=\"unlimited\" id='el\nCONTENT;\n$return .= htmlentities( $name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_unlimited' \nCONTENT;\n\nif ( !isset( $value[0] ) or !$value[0] ):\n$return .= <<<CONTENT\nchecked=\"checked\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n name=\"\nCONTENT;\n$return .= htmlentities( $name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[2]\"> <label for='el\nCONTENT;\n$return .= htmlentities( $name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_unlimited' class='ipsField_unlimited'>\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'never', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/label>\nCONTENT;\n\t\treturn $return;\n}\n\n\tfunction moderatorPermissions( $title, $content ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n<div data-controller='core.admin.members.moderatorPermissions'>\n\t{$content}\n<\/div>\nCONTENT;\n\t\treturn $return;\n}\n\n\tfunction postingLimits( $name, $value ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'after', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n<input type=\"number\" name=\"\nCONTENT;\n$return .= htmlentities( $name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[0]\" value=\"\nCONTENT;\n$return .= htmlentities( $value[0], ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" class=\"ipsField_short\">\n<select name=\"\nCONTENT;\n$return .= htmlentities( $name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[1]\" class=\"ipsField_short\">\n\t<option value=\"0\" \nCONTENT;\n\nif ( !$value[1] ):\n$return .= <<<CONTENT\nselected=\"selected\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'approved_posts_comments', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/option>\n\t<option value=\"1\" \nCONTENT;\n\nif ( $value[1] ):\n$return .= <<<CONTENT\nselected=\"selected\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'days_since_joining', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/option>\n<\/select>\n&nbsp; \nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'or', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n &nbsp;\n<input type=\"checkbox\" data-control=\"unlimited\" id='el\nCONTENT;\n$return .= htmlentities( $name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_unlimited' \nCONTENT;\n\nif ( !$value[0] ):\n$return .= <<<CONTENT\nchecked=\"checked\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n> <label for='el\nCONTENT;\n$return .= htmlentities( $name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_unlimited' class='ipsField_unlimited'>\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'never', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/label>\nCONTENT;\n\t\treturn $return;\n}\n\n\tfunction prefixSuffix( $name, $color, $prefix, $suffix ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n<span id=\"\nCONTENT;\n$return .= htmlentities( $name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_color\" class=\"\nCONTENT;\n\nif ( $prefix or $suffix ):\n$return .= <<<CONTENT\nipsHide\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\nipsJS_show\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\">\n\t<input type=\"text\" name=\"\nCONTENT;\n$return .= htmlentities( $name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[color]\" id=\"\nCONTENT;\n$return .= htmlentities( $name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_color\" value=\"\nCONTENT;\n$return .= htmlentities( $color, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" data-control='color' class='ipsField_short'> &nbsp; \nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'or', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n &nbsp; <a href=\"#\" data-clickshow=\"\nCONTENT;\n$return .= htmlentities( $name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_html\" data-clickhide=\"\nCONTENT;\n$return .= htmlentities( $name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_color\">\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'use_html', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n<\/span>\n<span id=\"\nCONTENT;\n$return .= htmlentities( $name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_html\" class=\"\nCONTENT;\n\nif ( !$prefix and !$suffix ):\n$return .= <<<CONTENT\nipsJS_hide\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\">\n\t<input type=\"text\" name=\"\nCONTENT;\n$return .= htmlentities( $name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[prefix]\" id=\"\nCONTENT;\n$return .= htmlentities( $name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_prefix\" placeholder=\"&lt;strong&gt;\" value=\"\nCONTENT;\n$return .= htmlentities( $prefix, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" class=\"ipsField_short\"> \nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'g_title', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n <input type=\"text\" name=\"\nCONTENT;\n$return .= htmlentities( $name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[suffix]\" id=\"\nCONTENT;\n$return .= htmlentities( $name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_suffix\" placeholder=\"&lt;\/strong&gt;\" value=\"\nCONTENT;\n$return .= htmlentities( $suffix, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" class=\"ipsField_short\">\n\t<span class=\"no_js_hide\"> &nbsp; \nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'or', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n &nbsp; <a href=\"#\" data-clickshow=\"\nCONTENT;\n$return .= htmlentities( $name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_color\" data-clickhide=\"\nCONTENT;\n$return .= htmlentities( $name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_html\" data-clickempty=\"\nCONTENT;\n$return .= htmlentities( $name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_prefix,\nCONTENT;\n$return .= htmlentities( $name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_suffix\">\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'use_color', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/span>\n<\/span>\nCONTENT;\n\t\treturn $return;\n}\n\n\tfunction signatureLimits( $name, $value ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'after', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n<input type=\"number\" name=\"\nCONTENT;\n$return .= htmlentities( $name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[0]\" value=\"\nCONTENT;\n$return .= htmlentities( $value[0], ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" min=\"0\" class=\"ipsField_short\">\n<select name=\"\nCONTENT;\n$return .= htmlentities( $name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[1]\" class=\"ipsField_short\">\n\t<option value=\"0\" \nCONTENT;\n\nif ( !$value[1] ):\n$return .= <<<CONTENT\nselected=\"selected\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'approved_posts_comments', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/option>\n\t<option value=\"1\" \nCONTENT;\n\nif ( $value[1] ):\n$return .= <<<CONTENT\nselected=\"selected\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'days_since_joining', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/option>\n<\/select>\n&nbsp; \nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'or', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n &nbsp;\n<input type=\"checkbox\" name=\"\nCONTENT;\n$return .= htmlentities( $name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[3]\" id='el\nCONTENT;\n$return .= htmlentities( $name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_3' data-control=\"unlimited\" \nCONTENT;\n\nif ( !$value[0] ):\n$return .= <<<CONTENT\nchecked=\"checked\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n> <label for='el\nCONTENT;\n$return .= htmlentities( $name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_3' class='ipsField_unlimited'>\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'always', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/label>\nCONTENT;\n\t\treturn $return;\n}\n\n\tfunction usernameChanges( $name, $value ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n<div>\n\t<label><input type='checkbox' name=\"\nCONTENT;\n$return .= htmlentities( $name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[canchange]\" value=\"1\" data-control=\"toggle\" data-toggles=\"group_un_perms\" \nCONTENT;\n\nif ( $value[0] ):\n$return .= <<<CONTENT\nchecked=\"checked\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n> \nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'group_allow_username_changes', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/label>\n<\/div>\n<br>\n<div id=\"group_un_perms\">\n\t<div data-role=\"unlimitedCatch\">\n\t\t\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'after', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n <input type=\"number\" class=\"ipsField_tiny\" value=\"\nCONTENT;\n$return .= htmlentities( $value[1], ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" name=\"\nCONTENT;\n$return .= htmlentities( $name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[1]\" min=\"0\"> <select name=\"\nCONTENT;\n$return .= htmlentities( $name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[2]\" class=\"ipsField_short\"><option value=\"0\" \nCONTENT;\n\nif ( !$value[2] ):\n$return .= <<<CONTENT\nselected=\"selected\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'approved_posts_comments', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/option><option value=\"1\" \nCONTENT;\n\nif ( $value[2] ):\n$return .= <<<CONTENT\nselected=\"selected\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'days_since_joining', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/option><\/select>  &nbsp; \nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'or', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n &nbsp; <input type='checkbox' name=\"\nCONTENT;\n$return .= htmlentities( $name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[always]\" id='el\nCONTENT;\n$return .= htmlentities( $name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_always' data-control=\"unlimited\" \nCONTENT;\n\nif ( !$value[1] ):\n$return .= <<<CONTENT\nchecked=\"checked\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n> <label for='el\nCONTENT;\n$return .= htmlentities( $name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_always' class='ipsField_unlimited'>\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'always', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/label>\n\t<\/div>\n\t<br>\n\t<div data-role=\"unlimitedCatch\">\n\t\t\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'can_change_username', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n <input type=\"number\" class=\"ipsField_tiny\" value=\"\nCONTENT;\n$return .= htmlentities( $value[0], ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" name=\"\nCONTENT;\n$return .= htmlentities( $name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[0]\"> \nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'times_every', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n <input type=\"number\" name=\"\nCONTENT;\n$return .= htmlentities( $name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[3]\" class=\"ipsField_tiny\" value=\"\nCONTENT;\n$return .= htmlentities( $value[3], ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" min=\"0\"> \nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'days', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n &nbsp; \nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'or', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n &nbsp; <input type='checkbox' name=\"\nCONTENT;\n$return .= htmlentities( $name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[unlimited]\" id='el\nCONTENT;\n$return .= htmlentities( $name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_unlimited' value=\"1\" data-control=\"unlimited\" \nCONTENT;\n\nif ( $value[0] == -1 ):\n$return .= <<<CONTENT\nchecked=\"checked\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n> <label for='el\nCONTENT;\n$return .= htmlentities( $name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_unlimited' class='ipsField_unlimited'>\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'unlimited', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/label>\n\t<\/div>\n<\/div>\nCONTENT;\n\t\treturn $return;\n}\n\n\tfunction viewDnameHistory( $table,$member ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n<div class=\"ipsPad\">\n\t<a class='ipsButton ipsButton_veryLight' href='\nCONTENT;\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=members&controller=members&do=clearDnameHistory&id={$member->member_id}\", null, \"\", array(), 0 ) );\n$return .= <<<CONTENT\n'><i class='fa fa_magic'><\/i>\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'clear_dname_history', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n<\/div>\n<br>\n{$table}\nCONTENT;\n\t\treturn $return;\n}\n\n\tfunction warningTime( $name, $value, $perm=FALSE ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\nCONTENT;\n\nif ( $perm ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'for', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'after', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n<input type=\"number\" name=\"\nCONTENT;\n$return .= htmlentities( $name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[0]\" \nCONTENT;\n\nif ( $perm === FALSE or $value[0] != -1 ):\n$return .= <<<CONTENT\nvalue=\"\nCONTENT;\n$return .= htmlentities( $value[0], ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n min=\"0\" class=\"ipsField_short\">\n<select name=\"\nCONTENT;\n$return .= htmlentities( $name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[1]\">\n\t<option value=\"h\" \nCONTENT;\n\nif ( $value[1] == 'h' ):\n$return .= <<<CONTENT\nselected=\"selected\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'hours', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/option>\n\t<option value=\"d\" \nCONTENT;\n\nif ( $value[1] == 'd' ):\n$return .= <<<CONTENT\nselected=\"selected\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'days', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/option>\n<\/select>\n\nCONTENT;\n\nif ( $perm ):\n$return .= <<<CONTENT\n\n\t&nbsp; \nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'or', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n &nbsp;\n\t<input type=\"checkbox\" data-control=\"unlimited\" id='el\nCONTENT;\n$return .= htmlentities( $name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_unlimited' \nCONTENT;\n\nif ( $value[0] == -1 ):\n$return .= <<<CONTENT\nchecked=\"checked\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n name=\"\nCONTENT;\n$return .= htmlentities( $name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[3]\"> <label for='el\nCONTENT;\n$return .= htmlentities( $name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_unlimited' class='ipsField_unlimited'>\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'indefinitely', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/label>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\t\treturn $return;\n}}"