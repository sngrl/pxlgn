"namespace IPS\\Theme;\nclass class_core_front_vnc\n{\n\t\t\tfunction filters( $baseUrl, $contentTypes, $nodeSelect, $nodeTitle ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n<div class='ipsResponsive_hideDesktop ipsResponsive_block ipsClearfix ipsType_reset ipsPad_half'>\n\t<h2 class='ipsType_sectionHead ipsPos_left'>Filters<\/h2>\n\t<a href='#' data-action='filterBarSwitch' data-switchTo='filterContent' class='ipsPos_right ipsButton ipsButton_verySmall ipsButton_light'><i class='fa fa-navicon'><\/i> &nbsp;\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'vnc_results', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n <i class='fa fa-caret-right'><\/i><\/a>&nbsp;&nbsp;\n<\/div>\n\n<ul class='ipsForm ipsForm_vertical ipsList_reset'>\n\t<li class='ipsFieldRow ipsFieldRow_fullWidth ipsPad'>\n\t\t<label class=\"ipsFieldRow_label ipsResponsive_hidePhone\">\n\t\t\t\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'vnc_content_type', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t<\/label>\n\t\t<div class='ipsSideMenu' data-ipsSideMenu id='elSearch_appFilter'>\n\t\t\t<h3 class='ipsSideMenu_mainTitle ipsAreaBackground_reset ipsType_medium'>\n\t\t\t\t<a href='#elSearch_appFilter' class='ipsPad_double' data-action='openSideMenu'><i class='fa fa-bars'><\/i> &nbsp;\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'vnc_content_type', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n&nbsp;<i class='fa fa-caret-down'><\/i><\/a>\n\t\t\t<\/h3>\n\t\t\t<ul class='ipsSideMenu_list ipsSideMenu_withRadios ipsType_normal'>\n\t\t\t\t\nCONTENT;\n\nif ( count( $contentTypes ) > 1 ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<li class='ipsSideMenu_item \nCONTENT;\n\nif ( !\\IPS\\Request::i()->type ):\n$return .= <<<CONTENT\nipsSideMenu_itemActive\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'>\n\t\t\t\t\t\t<a href='\nCONTENT;\n$return .= htmlentities( $baseUrl->stripQueryString( 'type' )->stripQueryString( 'nodes' ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-action=\"filterResults\">\n\t\t\t\t\t\t\t\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'all_new_content', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<\/a>\n\t\t\t\t\t<\/li>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nforeach ( $contentTypes as $key => $class ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<li class='ipsSideMenu_item \nCONTENT;\n\nif ( \\IPS\\Request::i()->type == $key ):\n$return .= <<<CONTENT\nipsSideMenu_itemActive\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'>\n\t\t\t\t\t\t<a href='\nCONTENT;\n$return .= htmlentities( $baseUrl->setQueryString( array( 'type' => $key ) )->stripQueryString( 'nodes' ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-action=\"filterResults\">\n\t\t\t\t\t\t\t\nCONTENT;\n$val = \"{$key}_pl\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<\/a>\n\t\t\t\t\t<\/li>\n\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t<\/ul>\n\t\t<\/div>\n\t<\/li>\n\t\nCONTENT;\n\nif ( $nodeSelect ):\n$return .= <<<CONTENT\n\n\t<li class='ipsFieldRow ipsFieldRow_fullWidth ipsPad'>\n\t\t<label class=\"ipsFieldRow_label\">\n\t\t\t\nCONTENT;\n$sprintf = array($nodeTitle); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'vnc_filter_by', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n\n\t\t<\/label>\n\t\t<form action=\"\nCONTENT;\n$return .= htmlentities( $baseUrl, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" method=\"post\" data-role=\"containerFilter\">\n\t\t\t{$nodeSelect->html()}\n\t\t\t<noscript>\n\t\t\t\t<input type=\"submit\" class=\"ipsButton ipsButton_secondary\" value=\"\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'update_results', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\">\n\t\t\t<\/noscript>\n\t\t<\/form>\n\t<\/li>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<li class='ipsFieldRow ipsFieldRow_fullWidth ipsPad'>\n\t\t<label class=\"ipsFieldRow_label ipsResponsive_hidePhone\">\n\t\t\t\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'vnc_filters', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t<\/label>\n\t\t<div class='ipsSideMenu' data-ipsSideMenu id='elVNC_filters'>\n\t\t\t<h3 class='ipsSideMenu_mainTitle ipsAreaBackground_reset ipsType_medium'>\n\t\t\t\t<a href='#elVNC_filters' class='ipsPad_double' data-action='openSideMenu'><i class='fa fa-bars'><\/i> &nbsp;\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'vnc_filters', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n&nbsp;<i class='fa fa-caret-down'><\/i><\/a>\n\t\t\t<\/h3>\n\t\t\t<ul class='ipsSideMenu_list ipsSideMenu_withChecks ipsType_normal'>\n\t\t\t\t<li class='ipsSideMenu_item \nCONTENT;\n\nif ( \\IPS\\Request::i()->onlyUnread ):\n$return .= <<<CONTENT\nipsSideMenu_itemActive\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'><a href='\nCONTENT;\n$return .= htmlentities( $baseUrl->setQueryString( array( 'onlyUnread' => \\IPS\\Request::i()->onlyUnread ? 0 : 1 ) ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-action=\"filterResults\">\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'only_items_not_read', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t<li class='ipsSideMenu_item \nCONTENT;\n\nif ( \\IPS\\Request::i()->onlyFollowed ):\n$return .= <<<CONTENT\nipsSideMenu_itemActive\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'><a href='\nCONTENT;\n$return .= htmlentities( $baseUrl->setQueryString( array( 'onlyFollowed' => \\IPS\\Request::i()->onlyFollowed ? 0 : 1 ) ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-action=\"filterResults\"> \nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'only_items_i_follow', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t<li class='ipsSideMenu_item \nCONTENT;\n\nif ( \\IPS\\Request::i()->onlyParticipated ):\n$return .= <<<CONTENT\nipsSideMenu_itemActive\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'><a href='\nCONTENT;\n$return .= htmlentities( $baseUrl->setQueryString( array( 'onlyParticipated' => \\IPS\\Request::i()->onlyParticipated ? 0 : 1 ) ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-action=\"filterResults\"> \nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'only_items_i_posted', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t<li class='ipsSideMenu_item \nCONTENT;\n\nif ( \\IPS\\Request::i()->onlyStarted ):\n$return .= <<<CONTENT\nipsSideMenu_itemActive\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'><a href='\nCONTENT;\n$return .= htmlentities( $baseUrl->setQueryString( array( 'onlyStarted' => \\IPS\\Request::i()->onlyStarted ? 0 : 1 ) ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-action=\"filterResults\"> \nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'only_items_i_started', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t<\/ul>\n\t\t<\/div>\n\t<\/li>\n\t<li class='ipsFieldRow ipsFieldRow_fullWidth ipsPad'>\n\t\t<label class=\"ipsFieldRow_label ipsResponsive_hidePhone\">\n\t\t\t\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'vnc_time_period', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n \n\t\t<\/label>\n\t\t<div class='ipsSideMenu' data-ipsSideMenu id='elVNC_time'>\n\t\t\t<h3 class='ipsSideMenu_mainTitle ipsAreaBackground_reset ipsType_medium'>\n\t\t\t\t<a href='#elVNC_time' class='ipsPad_double' data-action='openSideMenu'><i class='fa fa-bars'><\/i> &nbsp;\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'vnc_time_period', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n&nbsp;<i class='fa fa-caret-down'><\/i><\/a>\n\t\t\t<\/h3>\n\t\t\t<ul class='ipsSideMenu_list ipsSideMenu_withRadios ipsType_normal' role=\"radiogroup\">\n\t\t\t\t<li class='ipsSideMenu_item \nCONTENT;\n\nif ( !\\IPS\\Request::i()->vncTimePeriod ):\n$return .= <<<CONTENT\nipsSideMenu_itemActive\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'><a href='\nCONTENT;\n$return .= htmlentities( $baseUrl->stripQueryString( 'vncTimePeriod' )->stripQueryString( 'vncTime' ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-action=\"filterResults\">\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'vnc_lastvisit', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t<li class='ipsSideMenu_item \nCONTENT;\n\nif ( \\IPS\\Request::i()->vncTimePeriod == 'all' ):\n$return .= <<<CONTENT\nipsSideMenu_itemActive\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'><a href='\nCONTENT;\n$return .= htmlentities( $baseUrl->setQueryString( array( 'vncTimePeriod' => 'all' ))->stripQueryString( 'vncTime' ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-action=\"filterResults\">\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'vnc_view_alltime', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t<li class='ipsSideMenu_item \nCONTENT;\n\nif ( \\IPS\\Request::i()->vncTimePeriod == 'day' ):\n$return .= <<<CONTENT\nipsSideMenu_itemActive\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'><a href='\nCONTENT;\n$return .= htmlentities( $baseUrl->setQueryString( array( 'vncTimePeriod' => 'day' ))->stripQueryString( 'vncTime' ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-action=\"filterResults\">\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'vnc_view_daily', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t<li class='ipsSideMenu_item \nCONTENT;\n\nif ( \\IPS\\Request::i()->vncTimePeriod == 'week' ):\n$return .= <<<CONTENT\nipsSideMenu_itemActive\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'><a href='\nCONTENT;\n$return .= htmlentities( $baseUrl->setQueryString( array( 'vncTimePeriod' => 'week' ))->stripQueryString( 'vncTime' ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-action=\"filterResults\">\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'vnc_view_weekly', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t<li class='ipsSideMenu_item \nCONTENT;\n\nif ( \\IPS\\Request::i()->vncTimePeriod == 'month' ):\n$return .= <<<CONTENT\nipsSideMenu_itemActive\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'><a href='\nCONTENT;\n$return .= htmlentities( $baseUrl->setQueryString( array( 'vncTimePeriod' => 'month' ))->stripQueryString( 'vncTime' ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-action=\"filterResults\">\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'vnc_view_monthly', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t<\/ul>\n\t\t<\/div>\n\t<\/li>\n<\/ul>\nCONTENT;\n\t\treturn $return;\n}\n\n\tfunction genericRows( $table, $headers, $rows ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\nCONTENT;\n\nforeach ( $rows as $row ):\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\n$item = call_user_func( array( $row['class'], 'load' ), $row['id'] );\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n$return .= \\IPS\\Theme::i()->getTemplate( \"tables\", \\IPS\\Request::i()->app )->rows( $table, $headers, array( $item ) );\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\nCONTENT;\n\t\treturn $return;\n}\n\n\tfunction results( $baseUrl, $table, $timePeriod, $interval, $start, $end ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n<p class='ipsResponsive_hideDesktop ipsResponsive_block'>\n\t<a href='#' data-action='filterBarSwitch' data-switchTo='filterBar' class='ipsButton ipsButton_verySmall ipsButton_light'><i class='fa fa-caret-left'><\/i> <i class='fa fa-navicon'><\/i> &nbsp;\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'vnc_filters', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n<\/p>\n\n\nCONTENT;\n\nif ( $interval ):\n$return .= <<<CONTENT\n\n\t<header class='ipsAreaBackground_light ipsSpacer_bottom'>\n\t\t<div class=\"ipsGrid ipsGrid_collapsePhone ipsPager\" id='elVNCHeader_dateJump' data-role='vncPager'>\n\t\t\t<div class=\"ipsGrid_span4 ipsType_left ipsPager_prev\">\n\t\t\t\t<a href=\"\nCONTENT;\n$return .= htmlentities( $baseUrl->setQueryString( 'vncTime', \\IPS\\DateTime::ts( $start->getTimestamp() )->sub( $interval )->getTimestamp() ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" title=\"\nCONTENT;\n$val = \"vnc_prev_{$timePeriod}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" rel=\"prev\" data-action=\"vncPager\">\n\t\t\t\t\t<span class=\"ipsPager_type\">\nCONTENT;\n$val = \"vnc_prev_{$timePeriod}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t\t<span class=\"ipsPager_title ipsType_light\">\nCONTENT;\n$return .= htmlspecialchars( \\IPS\\DateTime::ts( $start->getTimestamp() )->sub( $interval )->strFormat( '%d %b' ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n - \nCONTENT;\n$return .= htmlentities( $start->strFormat( '%d %b' ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t<\/a>\n\t\t\t<\/div>\n\t\t\t<div class=\"ipsGrid_span4 ipsType_center ipsPad\">\n\t\t\t\t<span class=\"ipsType_large\">\n\t\t\t\t\t\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'vnc_from', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<br>\n\t\t\t\t\t<strong>\nCONTENT;\n$return .= htmlentities( $start->strFormat( '%d %b' ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n - \nCONTENT;\n\nif ( $end->diff( new \\IPS\\DateTime )->d == 0 AND $end->diff( new \\IPS\\DateTime )->m == 0 ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'vnc_today', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlentities( $end->strFormat( '%d %b' ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n<\/strong>\n\t\t\t\t<\/span>\n\t\t\t<\/div>\n\t\t\t\nCONTENT;\n\nif ( $end < new \\IPS\\DateTime  ):\n$return .= <<<CONTENT\n\n\t\t\t\t<div class=\"ipsGrid_span4 ipsType_right ipsPager_next\">\n\t\t\t\t\t<a href=\"\nCONTENT;\n$return .= htmlentities( $baseUrl->setQueryString( 'vncTime', \\IPS\\DateTime::ts( $end->getTimestamp() )->add( $interval )->getTimestamp() ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" title=\"\nCONTENT;\n$val = \"vnc_next_{$timePeriod}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" rel=\"next\" data-action=\"vncPager\">\n\t\t\t\t\t\t<span class=\"ipsPager_type\">\nCONTENT;\n$val = \"vnc_next_{$timePeriod}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t\t\t<span class=\"ipsPager_title ipsType_light\">\nCONTENT;\n$return .= htmlentities( $end->strFormat( '%d %b' ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n - \nCONTENT;\n$return .= htmlspecialchars( \\IPS\\DateTime::ts( $end->getTimestamp() )->add( $interval )->strFormat( '%d %b' ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t\t<\/a>\n\t\t\t\t<\/div>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<\/div>\n\t<\/header>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\n<div class=\"ipsBox\">{$table}<\/div>\nCONTENT;\n\t\treturn $return;\n}\n\n\tfunction template( $baseUrl, $contentTypes, $table, $timePeriod, $interval, $start, $end, $nodeSelect, $nodeTitle ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\nCONTENT;\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->pageHeader( \\IPS\\Member::loggedIn()->language()->addToStack('new_content') );\n$return .= <<<CONTENT\n\n\n<div data-controller='core.front.vnc.main'>\n\t<div class=\"ipsColumns ipsColumns_collapseTablet\" data-ipsFilterBar data-ipsFilterBar-on='phone,tablet' data-ipsFilterBar-viewDefault='filterContent'>\n\t\t<div class=\"ipsColumn ipsColumn_wide\" data-role='filterBar'>\n\t\t\t<div id=\"elVNC_sidebar\" data-role='vncSidebar' class='ipsAreaBackground_light'>\n\t\t\t\t\nCONTENT;\n$return .= \\IPS\\Theme::i()->getTemplate( \"vnc\", \\IPS\\Request::i()->app )->filters( $baseUrl, $contentTypes, $nodeSelect, $nodeTitle );\n$return .= <<<CONTENT\n\n\t\t\t<\/div>\n\t\t<\/div>\n\t\t<div id=\"elVNC_main\" class=\"ipsColumn ipsColumn_fluid\" data-role='filterContent'>\n\t\t\t<div data-role='vncContent'>\n\t\t\t\t\nCONTENT;\n$return .= \\IPS\\Theme::i()->getTemplate( \"vnc\", \\IPS\\Request::i()->app )->results( $baseUrl, $table, $timePeriod, $interval, $start, $end );\n$return .= <<<CONTENT\n\n\t\t\t<\/div>\n\t\t<\/div>\n\t<\/div>\t\n<\/div>\nCONTENT;\n\t\treturn $return;\n}}"