"namespace IPS\\Theme;\nclass class_core_admin_applications\n{\n\t\t\tfunction applicationWrapper( $tree, $lang ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n<br \/>\n<br \/>\n<div class='acpBlock_title'>\nCONTENT;\n$val = \"{$lang}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/div>\n{$tree}\nCONTENT;\n\t\treturn $return;\n}\n\n\tfunction codeHookEditor( $id, $action, $elements, $hiddenValues, $actionButtons, $uploadField, $class='', $attributes=array(), $sidebar ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n<form accept-charset='utf-8' class=\"ipsForm \nCONTENT;\n$return .= htmlentities( $class, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" action=\"\nCONTENT;\n$return .= htmlentities( $action, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" method=\"post\" \nCONTENT;\n\nif ( $uploadField ):\n$return .= <<<CONTENT\nenctype=\"multipart\/form-data\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n \nCONTENT;\n\nforeach ( $attributes as $k => $v ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlentities( $k, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n=\"\nCONTENT;\n$return .= htmlentities( $v, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n data-ipsForm>\n\t<input type=\"hidden\" name=\"\nCONTENT;\n$return .= htmlentities( $id, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_submitted\" value=\"1\">\n\t\nCONTENT;\n\nforeach ( $hiddenValues as $k => $v ):\n$return .= <<<CONTENT\n\n\t\t<input type=\"hidden\" name=\"\nCONTENT;\n$return .= htmlentities( $k, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" value=\"\nCONTENT;\n$return .= htmlentities( $v, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( $uploadField ):\n$return .= <<<CONTENT\n\n\t\t<input type=\"hidden\" name=\"MAX_FILE_SIZE\" value=\"\nCONTENT;\n$return .= htmlentities( $uploadField, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\t\t<input type=\"hidden\" name=\"plupload\" value=\"\nCONTENT;\n$return .= htmlspecialchars( md5( uniqid() ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nforeach ( $elements as $collection ):\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nforeach ( $collection as $input ):\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nif ( $input->error ):\n$return .= <<<CONTENT\n\n\t\t\t\t<div class=\"ipsPad ipsAreaBackground_light\">\n\t\t\t\t\t<p class='ipsMessage ipsMessage_error'>\nCONTENT;\n$val = \"{$input->error}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n\t\t\t\t<\/div>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t<section class='ipsAreaBackground_light ipsPad_half' id='elCodeHookEditor' data-controller='core.admin.system.codeHook'>\n\t\t<div class=\"ipsColumns ipsColumns_collapsePhone\">\n\t\t\t<div class=\"ipsColumn ipsColumn_wide\">\n\t\t\t\t\nCONTENT;\n$return .= array_pop( $sidebar );\n$return .= <<<CONTENT\n\n\t\t\t<\/div>\n\t\t\t<div class='ipsColumn ipsColumn_fluid'>\n\t\t\t\t\nCONTENT;\n\nforeach ( $elements as $collection ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nforeach ( $collection as $input ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t{$input->html()}\n\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t<\/div>\n\t\t<\/div>\n\n\t\t<div class=\"ipsAreaBackground_light ipsClearfix ipsType_center\">\n\t\t\t\nCONTENT;\n\nforeach ( $actionButtons as $button ):\n$return .= <<<CONTENT\n\n\t\t\t\t{$button}\n\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t<\/div>\n\t<\/section>\n<\/form>\nCONTENT;\n\t\treturn $return;\n}\n\n\tfunction codeHookSidebar( $data ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n<div class=\"cHookEditor_sidebar ipsScrollbar ipsSideMenu\">\n\t\t\nCONTENT;\n\nforeach ( $data as $className => $constructs ):\n$return .= <<<CONTENT\n\n\t\t\t<h3 class='ipsType_reset ipsAreaBackground ipsPad_half'>\nCONTENT;\n$return .= htmlentities( $className, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/h3>\n\t\t\t<br>\n\t\t\t\nCONTENT;\n\nif ( isset( $constructs['properties'] ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t<h4 class='ipsSideMenu_title'>\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'plugin_hook_properties', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h4>\n\t\t\t\t<ul class=\"ipsSideMenu_list\">\n\t\t\t\t\t\nCONTENT;\n\nforeach ( $constructs['properties'] as $property ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<li class=\"ipsSideMenu_item\" data-signature='\nCONTENT;\n$return .= htmlentities( $property->signature, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-codeToInject='\nCONTENT;\n$return .= htmlentities( $property->codeToInject, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\t\t\t\t\t\t\t<a href='#'>\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $property->isPublic() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<i class=\"fa fa-circle-o\" title=\"public\"><\/i>\n\t\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<i class=\"fa fa-circle\" title=\"protected\"><\/i>\n\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $property->isStatic() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\tstatic\n\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t$\nCONTENT;\n$return .= htmlentities( $property->getName(), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t<\/ul>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nif ( isset( $constructs['methods'] ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t<h4 class='ipsSideMenu_title'>\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'plugin_hook_methods', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h4>\n\t\t\t\t<ul class=\"ipsSideMenu_list\">\n\t\t\t\t\t\nCONTENT;\n\nforeach ( $constructs['methods'] as $method ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<li class=\"ipsSideMenu_item\" data-signature='\nCONTENT;\n$return .= htmlentities( $method->signature, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-codeToInject='\nCONTENT;\n$return .= htmlentities( $method->codeToInject, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\t\t\t\t\t\t\t<a href='#'>\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $method->isPublic() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<i class=\"fa fa-circle-o\" title=\"public\"><\/i>\n\t\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<i class=\"fa fa-circle\" title=\"protected\"><\/i>\n\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $method->isFinal() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\tfinal\n\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $method->isStatic() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\tstatic\n\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $method->isAbstract() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\tabstract\n\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( !$method->getNumberOfParameters() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\nCONTENT;\n$return .= htmlentities( $method->getName(), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n()\n\t\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( !$method->getNumberOfRequiredParameters() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n$return .= htmlentities( $method->getName(), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n( \nCONTENT;\n$return .= htmlentities( $method->getNumberOfParameters(), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n )\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nelseif ( $method->getNumberOfParameters() != $method->getNumberOfRequiredParameters() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n$return .= htmlentities( $method->getName(), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n( \nCONTENT;\n$return .= htmlentities( $method->getNumberOfRequiredParameters(), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n [, \nCONTENT;\n$return .= htmlspecialchars( $method->getNumberOfParameters() - $method->getNumberOfRequiredParameters(), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n ] )\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n$return .= htmlentities( $method->getName(), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n( [ \nCONTENT;\n$return .= htmlentities( $method->getNumberOfParameters(), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n ] )\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t<\/ul>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t<\/ul>\n<\/div>\nCONTENT;\n\t\treturn $return;\n}\n\n\tfunction details( $application, $lastUpgrade ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n<table class='ipsTable'>\n\t<tr>\n\t\t<td class=\"field_title\">\n\t\t\t<strong class=\"title\">\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'app_details_app_title', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong>\n\t\t<\/td>\n\t\t<td class=\"field_field\">\n\t\t\t\nCONTENT;\n$val = \"__app_{$application->directory}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"field_title\">\n\t\t\t<strong class=\"title\">\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'app_details_app_version', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong>\n\t\t<\/td>\n\t\t<td class=\"field_field\">\n\t\t\t\nCONTENT;\n$sprintf = array($application->version, $application->long_version); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'app_version_string', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"field_title\">\n\t\t\t<strong class=\"title\">\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'app_details_app_author', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong>\n\t\t<\/td>\n\t\t<td class=\"field_field\">\n\t\t\t\nCONTENT;\n$return .= htmlentities( $application->author, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nif ( $application->website ):\n$return .= <<<CONTENT\n <a href='\nCONTENT;\n$return .= htmlentities( $application->website, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' target='_blank'><i class=\"fa fa-external-link-square\" title='\nCONTENT;\n$return .= htmlentities( $application->website, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'><\/i><\/a>\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"field_title\">\n\t\t\t<strong class=\"title\">\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'app_details_app_installed', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong>\n\t\t<\/td>\n\t\t<td class=\"field_field\">\n\t\t\t\nCONTENT;\n$val = ( $application->added instanceof \\IPS\\DateTime ) ? $application->added : \\IPS\\DateTime::ts( $application->added );$return .= $val->html();\n$return .= <<<CONTENT\n\n\t\t<\/td>\n\t<\/tr>\n\t\nCONTENT;\n\nif ( $lastUpgrade !== NULL ):\n$return .= <<<CONTENT\n\n\t<tr>\n\t\t<td class=\"field_title\">\n\t\t\t<strong class=\"title\">\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'app_details_app_updated', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong>\n\t\t<\/td>\n\t\t<td class=\"field_field\">\n\t\t\t\nCONTENT;\n$val = ( $lastUpgrade instanceof \\IPS\\DateTime ) ? $lastUpgrade : \\IPS\\DateTime::ts( $lastUpgrade );$return .= $val->html();\n$return .= <<<CONTENT\n\n\t\t<\/td>\n\t<\/tr>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n<\/table>\n\nCONTENT;\n\t\treturn $return;\n}\n\n\tfunction downloadDialog( $application ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n<div class='ipsPad ipsAreaBackground ipsType_center'>\n\t<a href='\nCONTENT;\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=applications&controller=applications&appKey={$application}&do=download&type=build\", null, \"\", array(), 0 ) );\n$return .= <<<CONTENT\n' class='ipsButton'>\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'app_buildanddownload', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t<a href='\nCONTENT;\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=applications&controller=applications&appKey={$application}&do=download&type=download\", null, \"\", array(), 0 ) );\n$return .= <<<CONTENT\n' class='ipsButton ipsButton_alternate'>\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'app_justdownload', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n<\/div>\nCONTENT;\n\t\treturn $return;\n}\n\n\tfunction enhancements( $rows ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n<div id='acpEnhancements' data-ipsKeyNav data-ipsKeyNav-observe='t r return'>\n\t<h2 class='acpBlock_title'>\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'enhancements_ips', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h2>\n\t<br>\n\n\t\nCONTENT;\n\nforeach ( $rows[1] as $key => $data ):\n$return .= <<<CONTENT\n\n\t\t<div class='ipsAreaBackground_light ipsPad' data-keyNavBlock>\n\t\t\t\nCONTENT;\n\nif ( $data['icon'] != \"\" ):\n$return .= <<<CONTENT\n<img src='\nCONTENT;\n$return .= \\IPS\\Theme::i()->resource( \"enhancements\/{$data['icon']}\", \"core\", 'admin' );\n$return .= <<<CONTENT\n' class='acpEnhancement_logo ipsPos_right'>\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<h3><strong>\nCONTENT;\n$val = \"{$data['title']}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong><\/h3>\n\t\t\t\nCONTENT;\n\nif ( $data['description'] ):\n$return .= <<<CONTENT\n\n\t\t\t\t<p class='ipsType_medium'>\n\t\t\t\t\t\nCONTENT;\n$val = \"{$data['description']}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t<\/p>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<br>\n\t\t\t<ul class='ipsList_inline'>\n\t\t\t\t<li>\n\t\t\t\t\t\nCONTENT;\n\nif ( $data['enabled'] == 1 ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<a href='\nCONTENT;\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=applications&controller=enhancements&do=enableToggle&id={$key}&status=0\", null, \"\", array(), 0 ) );\n$return .= <<<CONTENT\n' class='ipsButton ipsButton_medium ipsButton_alternate' data-keyAction='t'>\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'disable', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<a href='\nCONTENT;\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=applications&controller=enhancements&do=enableToggle&id={$key}&status=1\", null, \"\", array(), 0 ) );\n$return .= <<<CONTENT\n' class='ipsButton ipsButton_medium ipsButton_alternate' data-keyAction='t'>\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'enable', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t<\/li>\n\t\t\t\t\nCONTENT;\n\nif ( $data['config'] ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href='\nCONTENT;\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=applications&controller=enhancements&do=edit&id={$key}\", null, \"\", array(), 0 ) );\n$return .= <<<CONTENT\n'><i class='fa fa-pencil'><\/i>&nbsp; \nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'enhancements_configure', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t<\/li>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<\/ul>\n\t\t<\/div>\n\t\t<br>\n\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\n\t<br>\n\t<h2 class='acpBlock_title'>\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'enhancements_thirdparty', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h2>\n\t<br>\n\n\t\nCONTENT;\n\nforeach ( $rows[0] as $key => $data ):\n$return .= <<<CONTENT\n\n\t\t<div class='ipsAreaBackground_light ipsPad' data-keyNavBlock>\n\t\t\t\nCONTENT;\n\nif ( $data['icon']  ):\n$return .= <<<CONTENT\n<img src='\nCONTENT;\n$return .= \\IPS\\Theme::i()->resource( \"enhancements\/{$data['icon']}\", \"{$data['app']}\", 'admin' );\n$return .= <<<CONTENT\n' class='acpEnhancement_logo ipsPos_right'>\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<h3><strong>\nCONTENT;\n$val = \"{$data['title']}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong><\/h3>\n\t\t\t\nCONTENT;\n\nif ( $data['description'] ):\n$return .= <<<CONTENT\n\n\t\t\t\t<p class='ipsType_medium'>\n\t\t\t\t\t\nCONTENT;\n$val = \"{$data['description']}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t<\/p>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<br>\n\t\t\t<ul class='ipsList_inline'>\n\t\t\t\t<li>\n\t\t\t\t\t\nCONTENT;\n\nif ( $data['enabled'] == 1 ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<a href='\nCONTENT;\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=applications&controller=enhancements&do=enableToggle&id={$key}&status=0\", null, \"\", array(), 0 ) );\n$return .= <<<CONTENT\n' class='ipsButton ipsButton_medium ipsButton_alternate' data-keyAction='t'>\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'disable', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<a href='\nCONTENT;\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=applications&controller=enhancements&do=enableToggle&id={$key}&status=1\", null, \"\", array(), 0 ) );\n$return .= <<<CONTENT\n' class='ipsButton ipsButton_medium ipsButton_alternate' data-keyAction='t'>\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'enable', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t<\/li>\n\t\t\t\t\nCONTENT;\n\nif ( $data['config'] ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href='\nCONTENT;\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=applications&controller=enhancements&do=edit&id={$key}\", null, \"\", array(), 0 ) );\n$return .= <<<CONTENT\n'><i class='fa fa-pencil'><\/i>&nbsp; \nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'enhancements_configure', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t<\/li>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<\/ul>\n\t\t<\/div>\n\t\t<br>\n\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n<\/div>\nCONTENT;\n\t\treturn $return;\n}\n\n\tfunction schemaConflict( $name, $diff ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<p class=\"ipsMessage ipsMessage_error\">\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'database_conflict_message', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n\n<div class=\"acpBlock\">\n\t<div class=\"acpBlock_title\">\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'database_conflict_title', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/div>\n\t<table class=\"ipsTable diff\">\n\t\t<tr>\n\t\t\t<th>\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'database_conflict_schema', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/th>\n\t\t\t<th>\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'database_conflict_local', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/th>\n\t\t<\/tr>\n\t<\/table>\n\t{$diff}\n\t<div class=\"ipsAreaBackground_light ipsPad\">\n\t\t<div class='ipsGrid'>\n\t\t\t<div class='ipsGrid_span6'>\n\t\t\t\t<a href='\nCONTENT;\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=applications&controller=developer&appKey=\", null, \"\", array(), 0 ) );\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( \\IPS\\Request::i()->appKey, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n&do=resolveSchemaConflicts&local=0&_name=\nCONTENT;\n$return .= htmlentities( $name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsButton ipsButton_primary' data-delete-confirm=\"\">\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'database_conflict_choose', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t<\/div>\n\t\t\t<div class='ipsGrid_span6'>\n\t\t\t\t<a href='\nCONTENT;\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=applications&controller=developer&appKey=\", null, \"\", array(), 0 ) );\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( \\IPS\\Request::i()->appKey, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n&do=resolveSchemaConflicts&local=1&_name=\nCONTENT;\n$return .= htmlentities( $name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsButton ipsButton_primary'>\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'database_conflict_choose', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t<\/div>\n\t\t<\/div>\n\t<\/div>\n<\/div>\nCONTENT;\n\t\treturn $return;\n}\n\n\tfunction themeHookEditor( $bits, $hookData, $hookId, $template, $tabbedContent, $url ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n<section class='ipsPad_half ipsAreaBackground' id='elSkinHookEditor' data-controller='core.admin.system.themeHookEditor'>\n\t<div class=\"ipsColumns ipsColumns_collapsePhone\">\n\t\t<div class=\"ipsColumn ipsColumn_wide\" data-role=\"themeHookSidebar\">\n\t\t\t<div class=\"cHookEditor_sidebar ipsSideMenu ipsScrollbar\">\n\t\t\t\t<ul class=\"ipsSideMenu_list\">\n\t\t\t\t\t\nCONTENT;\n\nforeach ( $bits as $k => $data ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<li class=\"ipsSideMenu_item\">\n\t\t\t\t\t\t\t<a class=\"\nCONTENT;\n\nif ( $template == $k ):\n$return .= <<<CONTENT\nipsSideMenu_itemActive cHookEditor_activeTemplate\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\" href='\nCONTENT;\n$return .= htmlentities( $url->setQueryString( 'do', 'editHook' )->setQueryString( 'template', $k ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-action=\"templateLink\">\n\t\t\t\t\t\t\t\t\nCONTENT;\n$return .= htmlentities( $k, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( isset( $hookData[ $k ] ) AND count( $hookData[ $k ] ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t<span class='ipsCommentCount ipsPos_right'>\nCONTENT;\n$return .= htmlspecialchars( count( $hookData[ $k ] ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t<\/ul>\n\t\t\t<\/div>\n\t\t<\/div>\n\t\t<div class=\"ipsColumn ipsColumn_fluid\" data-role=\"themeHookWindow\">\n\t\t\t\nCONTENT;\n\nif ( $template  ):\n$return .= <<<CONTENT\n\n\t\t\t\t<div class='cHookEditor_content' data-template='\nCONTENT;\n$return .= htmlentities( $template, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\t\t\t\t\t{$tabbedContent}\n\t\t\t\t<\/div>\n\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t<div class=\"ipsType_center ipsType_large ipsEmpty\" data-role=\"themeHookWindowPlaceholder\">\n\t\t\t\t\t<i class=\"fa fa-cogs\"><\/i>\n\t\t\t\t<\/div>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<\/div>\n\t<\/div>\n<\/section>\nCONTENT;\n\t\treturn $return;\n}\n\n\tfunction themeHookEditorTree( $node ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\nCONTENT;\n\nif ( $node->nodeType === XML_TEXT_NODE or $node->nodeType === XML_CDATA_SECTION_NODE ):\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( trim( $node->wholeText ) !== '' ):\n$return .= <<<CONTENT\n\n\t\t<li><span data-unselectable>\nCONTENT;\n$return .= htmlentities( $node->wholeText, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span><\/li>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nelseif ( $node->nodeType === XML_COMMENT_NODE ):\n$return .= <<<CONTENT\n\n\t<li><span data-unselectable>&lt;!-- ... --&gt;<\/span><\/li>\n\nCONTENT;\n\nelseif ( $node->nodeName === 'if' or $node->nodeName === 'foreach' or $node->nodeName === 'for' ):\n$return .= <<<CONTENT\n\n\t<li>\n\t\t<span data-unselectable>{\\0{\\0\nCONTENT;\n$return .= htmlentities( $node->nodeName, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n \nCONTENT;\n$return .= htmlentities( $node->attributes->getNamedItem('code')->nodeValue, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\\0}\\0}<\/span>\n\t\t\nCONTENT;\n\nif ( $node->hasChildNodes() ):\n$return .= <<<CONTENT\n\n\t\t\t<ul>\n\t\t\t\t\nCONTENT;\n\nforeach ( $node->childNodes as $child ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n$return .= \\IPS\\Theme::i()->getTemplate( \"applications\", \\IPS\\Request::i()->app )->themeHookEditorTree( $child );\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t<\/ul>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<span data-unselectable>{\\0{\\0end\nCONTENT;\n$return .= htmlentities( $node->nodeName, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\\0}\\0}<\/span>\n\t<\/li>\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t<li data-selector=\"\nCONTENT;\n$return .= htmlspecialchars( \\IPS\\core\\modules\\admin\\applications\\plugins::getSelector( $node ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\t\t\nCONTENT;\n\nif ( $node->nodeName != 'ipscontent' ):\n$return .= <<<CONTENT\n\n\t\t\t<span data-selectable>&lt;\nCONTENT;\n$return .= htmlspecialchars( preg_replace( '\/^(x_)?([a-z]+)(_x)?$\/i', '$2', $node->nodeName ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nif ( $node->hasAttributes() ):\n$return .= <<<CONTENT\n\nCONTENT;\n\nfor ( $i = 0; $i < $node->attributes->length; ++$i ):\n$return .= <<<CONTENT\n \nCONTENT;\n$return .= htmlentities( $node->attributes->item( $i )->nodeName, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n=\"\nCONTENT;\n$return .= htmlentities( $node->attributes->item( $i )->nodeValue, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendfor;\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n&gt;<\/span>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nif ( $node->hasChildNodes() ):\n$return .= <<<CONTENT\n\n\t\t\t<ul>\n\t\t\t\t\nCONTENT;\n\nforeach ( $node->childNodes as $child ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n$return .= \\IPS\\Theme::i()->getTemplate( \"applications\", \\IPS\\Request::i()->app )->themeHookEditorTree( $child );\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t<\/ul>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nif ( $node->nodeName != 'ipscontent' ):\n$return .= <<<CONTENT\n\n\t\t\t<span data-selectable>&lt;\/\nCONTENT;\n$return .= htmlspecialchars( preg_replace( '\/^(x_)?([a-z]+)(_x)?$\/i', '$2', $node->nodeName ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n&gt;<\/span>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<\/li>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\t\treturn $return;\n}\n\n\tfunction themeHookEditorTreeRoot( $tree ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n<div class='cHookEditor_tree'>\n\t<ul>\n\t\t\nCONTENT;\n$return .= \\IPS\\Theme::i()->getTemplate( \"applications\", \\IPS\\Request::i()->app )->themeHookEditorTree( $tree );\n$return .= <<<CONTENT\n\n\t<\/ul>\n<\/div>\nCONTENT;\n\t\treturn $return;\n}\n\n\tfunction versionFormField(  ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n<div class='ipsGrid ipsGrid_collapsePhone'>\n\t<div class='ipsGrid_span6'>\n\t\t<input type='text' name='app_versions[0]' id='app_version_human' required aria-required='true' placeholder=\"1.0.0\" size=\"10\">\n\t\t<br \/>\n\t\t<span class='ipsFieldRow_desc'>\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'add_app_version_ph', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span>\n\t<\/div>\n\t<div class='ipsGrid_span6'>\n\t\t<input type='text' name='app_versions[1]' id='app_version_long' required aria-required='true' placeholder=\"100000\" size=\"8\" maxlength=\"8\">\n\t\t<br \/>\n\t\t<span class='ipsFieldRow_desc'>\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'add_app_versionl_ph', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span>\n\t<\/div>\n<\/div>\n\nCONTENT;\n\t\treturn $return;\n}}"