"namespace IPS\\Theme;\nclass class_core_front_search\n{\n\t\t\tfunction advancedSearchForm( $id, $action, $elements, $hiddenValues, $actionButtons, $uploadField, $class='', $attributes=array(), $sidebar, $form=NULL ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->pageHeader( \\IPS\\Member::loggedIn()->language()->addToStack('advanced_search') );\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( $form->error ):\n$return .= <<<CONTENT\n\n\t<div class=\"ipsMessage ipsMessage_error\">\n\t\t\nCONTENT;\n$return .= htmlentities( $form->error, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t<\/div>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n<form accept-charset='utf-8' class=\"ipsForm ipsForm_horizontal ipsForm_fullWidth ipsBox\" method='post' action='\nCONTENT;\n$return .= htmlentities( $action, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-ipsForm data-controller='core.front.search.filters' id='elAdvancedSearch'>\n\t<input type=\"hidden\" name=\"\nCONTENT;\n$return .= htmlentities( $id, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_submitted\" value=\"1\">\n\t\nCONTENT;\n\nforeach ( $hiddenValues as $k => $v ):\n$return .= <<<CONTENT\n\n\t\t<input type=\"hidden\" name=\"\nCONTENT;\n$return .= htmlentities( $k, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" value=\"\nCONTENT;\n$return .= htmlentities( $v, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\n\t<h2 class='ipsType_sectionTitle ipsType_reset'>\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'search_parameters', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h2>\n\t<div class='ipsPad'>\n\t\t<ul class='ipsList_reset ipsPad ipsAreaBackground_light'>\n\t\t\t\nCONTENT;\n\nforeach ( $elements as $collection ):\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nforeach ( $collection as $fieldName => $input ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nif ( !is_string( $input ) AND in_array( $input->name, array( 'searchType' ) ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<li class='ipsFieldRow ipsClearfix' id='elSearchContentType'>\n\t\t\t\t\t\t\t<span class='ipsFieldRow_label'>\nCONTENT;\n$val = \"{$input->name}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t\t\t\t<div class='ipsFieldRow_content'>\n\t\t\t\t\t\t\t\t\nCONTENT;\n\n$idx = 0;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\nCONTENT;\n\n$showAsGrid = ( count( $input->options['options'] ) > 3 ) ? true : false;\n$return .= <<<CONTENT\n\n\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nforeach ( $input->options['options'] as $option => $text ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $option == 'all' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\ncontinue;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $showAsGrid && $idx % 2 == 0 ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t<div class='ipsGrid ipsGrid_collapsePhone'>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $showAsGrid ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t<div class='ipsGrid_span6'>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t<input type='radio' value='\nCONTENT;\n$return .= htmlentities( $option, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' name='\nCONTENT;\n$return .= htmlentities( $input->name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' id='\nCONTENT;\n$return .= htmlspecialchars( $input->id ?: $input->name . $option, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' \nCONTENT;\n\nif ( $input->value == $option ):\n$return .= <<<CONTENT\nchecked\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n \nCONTENT;\n\nif ( isset( $input->options['toggles'][ $option ] ) and !empty( $input->options['toggles'][ $option ] ) ):\n$return .= <<<CONTENT\ndata-control=\"toggle\" data-toggles=\"\nCONTENT;\n$return .= htmlspecialchars( implode( ',', $input->options['toggles'][ $option ] ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n> &nbsp;<label for='\nCONTENT;\n$return .= htmlspecialchars( $input->id ?: $input->name . $option, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\nCONTENT;\n$val = \"{$text}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/label>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $showAsGrid ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $showAsGrid && ( $idx % 2 != 0 || $idx == ( count( $input->options['options'] ) - 1 ) ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\n$idx++;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t<\/ul>\n\t\t<br>\n\t\t<ul class='ipsList_reset ipsPad ipsAreaBackground_light'>\n\t\t\t\nCONTENT;\n\nforeach ( $elements as $collection ):\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nforeach ( $collection as $fieldName => $input ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nif ( !is_string( $input ) AND in_array( $input->name, array( 'q', 'tags', 'eitherTermsOrTags', 'author' ) ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nif ( $input->name == 'eitherTermsOrTags' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<li class='ipsFieldRow ipsClearfix' id=\"\nCONTENT;\n$return .= htmlentities( $input->htmlId, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\t\t\t\t\t\t\t\t<span class='ipsFieldRow_label'>\nCONTENT;\n$val = \"{$input->name}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t\t\t\t\t<div class='ipsFieldRow_content'>\n\t\t\t\t\t\t\t\t\t<ul class='ipsList_inline' role=\"radiogroup\">\n\t\t\t\t\t\t\t\t\t\t<li class='ipsType_noBreak'>\n\t\t\t\t\t\t\t\t\t\t\t<input type='radio' name='\nCONTENT;\n$return .= htmlentities( $input->name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' value='or' id='\nCONTENT;\n$return .= htmlentities( $input->id, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_or' \nCONTENT;\n\nif ( $input->value == 'or' ):\n$return .= <<<CONTENT\nchecked\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n> &nbsp;<label for='\nCONTENT;\n$return .= htmlentities( $input->id, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_or'>\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'termsortags_or_desc', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/label>\n\t\t\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\t\t\t<li class='ipsType_noBreak'>\n\t\t\t\t\t\t\t\t\t\t\t<input type='radio' name='\nCONTENT;\n$return .= htmlentities( $input->name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' value='both' id='\nCONTENT;\n$return .= htmlentities( $input->id, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_both' \nCONTENT;\n\nif ( $input->value == 'and' ):\n$return .= <<<CONTENT\nchecked\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n> &nbsp;<label for='\nCONTENT;\n$return .= htmlentities( $input->id, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_both'>\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'termsortags_and_desc', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/label>\n\t\t\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\t\t<\/ul>\n\t\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t{$input->rowHtml($form)}\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t<\/ul>\n\t\t<br>\n\t\t<div id='elAdvancedSearch_dateFilters'>\n\t\t\t<ul class='ipsList_reset ipsPad ipsAreaBackground_light'>\n\t\t\t\t\nCONTENT;\n\nforeach ( $elements as $collection ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nforeach ( $collection as $fieldName => $input ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nif ( !is_string( $input ) AND in_array( $input->name, array( 'startDate', 'updatedDate' ) ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<li class='ipsFieldRow ipsClearfix' id=\"\nCONTENT;\n$return .= htmlentities( $input->htmlId, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\t\t\t\t\t\t\t\t<span class='ipsFieldRow_label'>\nCONTENT;\n$val = \"{$input->name}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t\t\t\t\t<div class='ipsFieldRow_content'>\n\t\t\t\t\t\t\t\t\t<select name='\nCONTENT;\n$return .= htmlentities( $input->name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nforeach ( $input->options['options'] as $key => $text ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t<option value='\nCONTENT;\n$return .= htmlentities( $key, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' \nCONTENT;\n\nif ( isset( $input->options['toggles'][ $key ][0] ) ):\n$return .= <<<CONTENT\ndata-control=\"toggle\" data-toggles=\"\nCONTENT;\n$return .= htmlentities( $input->options['toggles'][ $key ][0], ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\nCONTENT;\n$val = \"search_{$key}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/option>\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t<\/select>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( isset( $collection[ $fieldName . 'Custom'] ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t<div class='cAdvancedSearchDate ipsJS_hide' id='elCustomDate_\nCONTENT;\n$return .= htmlentities( $input->name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\t\t\t\t\t\t\t\t\t\t\t{$collection[ $fieldName . 'Custom']->html()}\n\t\t\t\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t<\/ul>\n\t\t\t<br>\n\t\t<\/div>\n\t\t<div class='ipsPad ipsAreaBackground_light ipsFieldRow' id='elAdvancedSearch_appFilters'>\n\t\t\t<div class='ipsFieldRow_content'>\n\t\t\t<\/div>\n\t\t\t<ul class='ipsList_reset'>\n\t\t\t\t\nCONTENT;\n\nforeach ( $elements as $collection ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nforeach ( $collection as $fieldName => $input ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nif ( !is_string( $input ) AND $input->name == 'joinedDate' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<li class='ipsFieldRow ipsClearfix' id=\"\nCONTENT;\n$return .= htmlentities( $input->htmlId, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\t\t\t\t\t\t\t\t<span class='ipsFieldRow_label'>\nCONTENT;\n$val = \"{$input->name}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t\t\t\t\t<div class='ipsFieldRow_content'>\n\t\t\t\t\t\t\t\t\t<select name='\nCONTENT;\n$return .= htmlentities( $input->name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nforeach ( $input->options['options'] as $key => $text ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t<option value='\nCONTENT;\n$return .= htmlentities( $key, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' \nCONTENT;\n\nif ( isset( $input->options['toggles'][ $key ][0] ) ):\n$return .= <<<CONTENT\ndata-control=\"toggle\" data-toggles=\"\nCONTENT;\n$return .= htmlentities( $input->options['toggles'][ $key ][0], ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\nCONTENT;\n$val = \"search_{$key}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/option>\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t<\/select>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( isset( $collection[ $fieldName . 'Custom'] ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t<div class='cAdvancedSearchDate ipsJS_hide' id='elCustomDate_joinedDate'>\n\t\t\t\t\t\t\t\t\t\t\t{$collection[ $fieldName . 'Custom']->html()}\n\t\t\t\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\nCONTENT;\n\nelseif ( is_string( $input )  ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t{$input}\n\t\t\t\t\t\t\nCONTENT;\n\nelseif ( !in_array( $input->name, array( 'q', 'tags', 'searchType', 'eitherTermsOrTags', 'author', 'startDate', 'updatedDate', 'startDateCustom', 'updatedDateCustom', 'joinedDate', 'joinedDateCustom' ) ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t{$input->rowHtml($form)}\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t<li class='ipsHide'><\/li>\n\t\t\t<\/ul>\n\t\t<\/div>\n\t<\/div>\n\t<div class='ipsAreaBackground ipsType_center ipsPad'>\n\t\t<button type=\"submit\" class=\"ipsButton ipsButton_large ipsButton_primary\" id='elSearchButton'>\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'search_community', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/button>\n\t<\/div>\n<\/form>\nCONTENT;\n\t\treturn $return;\n}\n\n\tfunction contentComment( $comment ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n<li class=\"ipsDataItem\">\n\t<div class='ipsDataItem_icon ipsType_center ipsPos_top ipsResponsive_hidePhone'>\n\t\t\nCONTENT;\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->userPhoto( $comment->author(), 'tiny' );\n$return .= <<<CONTENT\n\n\t\t<br><br>\n\t\t<i class=\"fa fa-comment ipsType_large ipsType_light\" title=\"\nCONTENT;\n$val = \"{$comment::$title}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" data-ipsTooltip><\/i>\n\t<\/div>\n\t<div class='ipsDataItem_main'>\n\t\t<div class='ipsType_break ipsContained'>\n\t\t\t<h4 class='ipsType_sectionHead ipsContained'>\n\t\t\t\t<a href='\nCONTENT;\n$return .= htmlentities( $comment->url(), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsType_blendLinks'><span class='ipsType_light'>\nCONTENT;\n$sprintf = array(\\IPS\\Member::loggedIn()->language()->addToStack( $comment::$title, TRUE, array( 'ucfirst' => TRUE ) )); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'comment_on_item', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n<\/span> <span class='cSearchResultHighlight'>\nCONTENT;\n$return .= htmlentities( $comment->item()->mapped('title'), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span><\/a>\n\t\t\t\t\nCONTENT;\n\nif ( $container = $comment->item()->containerWrapper( TRUE ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<span class=\"ipsType_medium\">\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'in', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n <a href=\"\nCONTENT;\n$return .= htmlentities( $container->url(), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\nCONTENT;\n$return .= htmlentities( $container->_title, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/a><\/span>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nif ( $comment->hidden() or $comment->item()->hidden() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<span>\n\t\t\t\t\t\t\nCONTENT;\n\nif ( $comment->hidden() === -1  or $comment->item()->hidden() === -1 ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<span class=\"ipsBadge ipsBadge_icon ipsBadge_small ipsBadge_warning\" data-ipsTooltip title='\nCONTENT;\n$return .= htmlentities( $comment->hiddenBlurb(), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'><i class='fa fa-eye-slash'><\/i><\/span>\n\t\t\t\t\t\t\nCONTENT;\n\nelseif ( $comment->hidden() === 1 or  $comment->item()->hidden() === 1 ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<span class=\"ipsBadge ipsBadge_icon ipsBadge_small ipsBadge_warning\" data-ipsTooltip title='\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'pending_approval', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'><i class='fa fa-warning'><\/i><\/span>\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\t\t\t\t\t\t\t\n\t\t\t\t\t<\/span>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\t\t\t\t\n\t\t\t<\/h4>\t\t\n\t\t\t<span class='ipsType_medium ipsType_light ipsType_blendLinks'>\nCONTENT;\n$htmlsprintf = array($comment->author()->link()); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'search_posted_by', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'htmlsprintf' => $htmlsprintf ) );\n$return .= <<<CONTENT\n \nCONTENT;\n$val = ( $comment->mapped('date') instanceof \\IPS\\DateTime ) ? $comment->mapped('date') : \\IPS\\DateTime::ts( $comment->mapped('date') );$return .= $val->html();\n$return .= <<<CONTENT\n<\/span>\t\n\t\t<\/div>\n\t\t<div class=\"cSearchResultHighlight\">\n\t\t\t\nCONTENT;\n\n$app = $comment::$application;\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"$app\" )->snippet( $comment, 'search' );\n$return .= <<<CONTENT\n\n\t\t<\/div>\n\t<\/div>\n<\/li>\nCONTENT;\n\t\treturn $return;\n}\n\n\tfunction contentItem( $item ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n<li class=\"ipsDataItem\">\n\t<div class='ipsDataItem_icon ipsType_center ipsPos_top ipsResponsive_hidePhone'>\n\t\t\nCONTENT;\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->userPhoto( $item->author(), 'tiny' );\n$return .= <<<CONTENT\n\n\t\t<br><br>\n\t\t<i class=\"fa fa-\nCONTENT;\n$return .= htmlentities( $item::$icon, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n ipsType_large ipsType_light\" title=\"\nCONTENT;\n$val = \"{$item::$title}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" data-ipsTooltip><\/i>\n\t<\/div>\n\t<div class='ipsDataItem_main'>\n\t\t<div class='ipsType_break ipsContained'>\n\t\t\t<h4 class='ipsType_sectionHead ipsContained'>\n\t\t\t\t\nCONTENT;\n\nif ( $item->prefix() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->prefix( $item->prefix( TRUE ), $item->prefix() );\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t<span class=\"cSearchResultHighlight\">\n\t\t\t\t\t<a href='\nCONTENT;\n$return .= htmlentities( $item->url(), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsType_blendLinks'>\nCONTENT;\n$return .= htmlentities( $item->mapped('title'), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t<\/span>\n\t\t\t\t\nCONTENT;\n\nif ( $container = $item->containerWrapper( TRUE ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<span class=\"ipsType_medium\">\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'in', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n <a href=\"\nCONTENT;\n$return .= htmlentities( $container->url(), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\nCONTENT;\n$return .= htmlentities( $container->_title, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/a><\/span>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nif ( $item->mapped('pinned') || $item->mapped('featured') || $item->hidden() === -1 || $item->hidden() === 1 ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<span>\n\t\t\t\t\t\t\nCONTENT;\n\nif ( $item->hidden() === -1 ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<span class=\"ipsBadge ipsBadge_icon ipsBadge_small ipsBadge_warning\" data-ipsTooltip title='\nCONTENT;\n$return .= htmlentities( $item->hiddenBlurb(), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'><i class='fa fa-eye-slash'><\/i><\/span>\n\t\t\t\t\t\t\nCONTENT;\n\nelseif ( $item->hidden() === 1 ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<span class=\"ipsBadge ipsBadge_icon ipsBadge_small ipsBadge_warning\" data-ipsTooltip title='\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'pending_approval', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'><i class='fa fa-warning'><\/i><\/span>\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\nCONTENT;\n\nif ( $item->mapped('pinned') ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<span class=\"ipsBadge ipsBadge_icon ipsBadge_small ipsBadge_positive\" data-ipsTooltip title='\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'pinned', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'><i class='fa fa-thumb-tack'><\/i><\/span>\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nif ( $item->mapped('featured') ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<span class=\"ipsBadge ipsBadge_icon ipsBadge_small ipsBadge_positive\" data-ipsTooltip title='\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'featured', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'><i class='fa fa-star'><\/i><\/span>\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/span>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<\/h4>\n\t\t\t\nCONTENT;\n\nif ( count( $item->tags() ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->tags( $item->tags(), true, true );\n$return .= <<<CONTENT\n\n\t\t\t\t<br>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<span class='ipsType_medium ipsType_light ipsType_blendLinks'>\nCONTENT;\n$htmlsprintf = array($item->author()->link()); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'search_posted_by', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'htmlsprintf' => $htmlsprintf ) );\n$return .= <<<CONTENT\n \nCONTENT;\n$val = ( $item->mapped('date') instanceof \\IPS\\DateTime ) ? $item->mapped('date') : \\IPS\\DateTime::ts( $item->mapped('date') );$return .= $val->html();\n$return .= <<<CONTENT\n<\/span>\n\t\t<\/div>\n\t\t<div class=\"cSearchResultHighlight\">\n\t\t\t\nCONTENT;\n\n$app = $item::$application;\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"$app\" )->snippet( $item, 'search' );\n$return .= <<<CONTENT\n\n\t\t<\/div>\n\t<\/div>\n<\/li>\n\nCONTENT;\n\t\treturn $return;\n}\n\n\tfunction contentReview( $review ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n<li class=\"ipsDataItem\">\n\t<div class='ipsDataItem_icon ipsType_center ipsPos_top ipsResponsive_hidePhone'>\n\t\t\nCONTENT;\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->userPhoto( $review->author(), 'tiny' );\n$return .= <<<CONTENT\n\n\t\t<br><br>\n\t\t<i class=\"fa fa-\nCONTENT;\n$return .= htmlentities( $review::$icon, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n ipsType_large ipsType_light\" title=\"\nCONTENT;\n$val = \"{$review::$title}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" data-ipsTooltip><\/i>\n\t<\/div>\n\t<div class='ipsDataItem_main'>\n\t\t<div class='ipsType_break ipsContained cSearchResultHighlight'>\n\t\t\t<h4 class='ipsType_sectionHead ipsContained'>\n\t\t\t\t<a href='\nCONTENT;\n$return .= htmlentities( $review->url(), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsType_blendLinks'><span class='ipsType_light'>\nCONTENT;\n$sprintf = array(\\IPS\\Member::loggedIn()->language()->addToStack( $review::$title, TRUE, array( 'ucfirst' => TRUE ) )); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'comment_on_item', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n<\/span> \nCONTENT;\n$return .= htmlentities( $review->item()->mapped('title'), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\nCONTENT;\n\nif ( $container = $review->item()->containerWrapper( TRUE ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<span class=\"ipsType_medium\">\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'in', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n <a href=\"\nCONTENT;\n$return .= htmlentities( $container->url(), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\nCONTENT;\n$return .= htmlentities( $container->_title, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/a><\/span>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nif ( $review->hidden() or $review->item()->hidden() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<span>\n\t\t\t\t\t\t\nCONTENT;\n\nif ( $review->hidden() === -1  or $review->item()->hidden() === -1 ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<span class=\"ipsBadge ipsBadge_icon ipsBadge_small ipsBadge_warning\" data-ipsTooltip title='\nCONTENT;\n$return .= htmlentities( $review->hiddenBlurb(), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'><i class='fa fa-eye-slash'><\/i><\/span>\n\t\t\t\t\t\t\nCONTENT;\n\nelseif ( $review->hidden() === 1 or  $review->item()->hidden() === 1 ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<span class=\"ipsBadge ipsBadge_icon ipsBadge_small ipsBadge_warning\" data-ipsTooltip title='\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'pending_approval', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'><i class='fa fa-warning'><\/i><\/span>\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\t\t\t\t\t\t\t\n\t\t\t\t\t<\/span>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<\/h4>\n\t\t\t<span class='ipsType_medium ipsType_light ipsType_blendLinks'>\nCONTENT;\n$sprintf = array(ucfirst( $review->indefiniteArticle() )); $htmlsprintf = array($review->author()->link()); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'search_posted_by', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf, 'htmlsprintf' => $htmlsprintf ) );\n$return .= <<<CONTENT\n \nCONTENT;\n$val = ( $review->mapped('date') instanceof \\IPS\\DateTime ) ? $review->mapped('date') : \\IPS\\DateTime::ts( $review->mapped('date') );$return .= $val->html();\n$return .= <<<CONTENT\n<\/span>\n\t\t<\/div>\n\t\t<div class=\"cSearchResultHighlight\">\n\t\t\t\nCONTENT;\n\n$app = $review::$application;\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"$app\" )->snippet( $review, 'search' );\n$return .= <<<CONTENT\n\n\t\t<\/div>\n\t<\/div>\n<\/li>\nCONTENT;\n\t\treturn $return;\n}\n\n\tfunction filters( $id, $action, $elements, $hiddenValues, $actionButtons, $uploadField, $class='', $attributes=array(), $sidebar, $form=NULL ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n<hr class='ipsHr'>\n<form accept-charset='utf-8' class=\"ipsForm ipsForm_vertical\" method='post' action='\nCONTENT;\n$return .= htmlentities( $action, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-ipsForm data-controller='core.front.search.filters' id='elSearchFilters'>\n\t<input type=\"hidden\" name=\"\nCONTENT;\n$return .= htmlentities( $id, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_submitted\" value=\"1\">\n\t\nCONTENT;\n\nforeach ( $hiddenValues as $k => $v ):\n$return .= <<<CONTENT\n\n\t\t<input type=\"hidden\" name=\"\nCONTENT;\n$return .= htmlentities( $k, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" value=\"\nCONTENT;\n$return .= htmlentities( $v, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t<ul class='ipsList_reset cSearchFilters'>\n\t\t\nCONTENT;\n\nforeach ( $elements as $collection ):\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nforeach ( $collection as $fieldName => $input ):\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nif ( !in_array( $fieldName, array( 'searchType' ) ) AND !is_string( $input )  ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nif ( $input instanceof \\IPS\\Helpers\\Form\\Date ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<li class='ipsFieldRow ipsFieldRow_fullWidth'>\n\t\t\t\t\t\t\t<input type=\"date\" data-control=\"date\" placeholder=\"\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'jump_to_placeholder', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" name='\nCONTENT;\n$return .= htmlentities( $input->name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' id='\nCONTENT;\n$return .= htmlentities( $input->htmlId, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\nCONTENT;\n\nelseif ( $input->name == 'eitherTermsOrTags' and \\IPS\\Request::i()->type === 'core_members' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<li class='ipsFieldRow ipsFieldRow_fullWidth \nCONTENT;\n\nif ( $collection['tags'] && !$collection['tags']->value ):\n$return .= <<<CONTENT\nipsJS_hide\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n' id='elRadio_eitherTermsOrTags'>\n\t\t\t\t\t\t\t<ul class='ipsList_reset'>\n\t\t\t\t\t\t\t\t<li class='ipsType_medium'><input type='radio' name='eitherTermsOrTags' value='or' \nCONTENT;\n\nif ( $input->value == 'or' ):\n$return .= <<<CONTENT\nchecked\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n id='\nCONTENT;\n$return .= htmlentities( $input->id, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_or'> <label for='\nCONTENT;\n$return .= htmlentities( $input->id, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_or'>\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'termsortags_or_desc', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/label><\/li>\n\t\t\t\t\t\t\t\t<li class='ipsType_medium'><input type='radio' name='eitherTermsOrTags' value='and' \nCONTENT;\n\nif ( $input->value == 'and' ):\n$return .= <<<CONTENT\nchecked\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n id='\nCONTENT;\n$return .= htmlentities( $input->id, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_and'> <label for='\nCONTENT;\n$return .= htmlentities( $input->id, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_and'>\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'termsortags_and_desc', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/label><\/li>\n\t\t\t\t\t\t\t<\/ul>\n\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\nCONTENT;\n\nelseif ( in_array( $input->name, array( 'startDate', 'updatedDate' ) ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nif ( $input->name === 'updatedDate' and \\IPS\\Request::i()->type === 'core_members' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\ncontinue;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<li class='ipsFieldRow' id='elCustomDateChoices_\nCONTENT;\n$return .= htmlentities( $input->name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\t\t\t\t\t\t\t<label class=\"ipsFieldRow_label\" for=\"author\">\n\t\t\t\t\t\t\t\t<a href='#' class='ipsType_medium ipsPos_right ipsType_unbold' id='elCustomDate_\nCONTENT;\n$return .= htmlentities( $input->name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\nCustom' data-ipsMenu data-ipsMenu-appendTo='#elSearchFilters' data-ipsMenu-closeOnClick='false'>\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'custom', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t\t\t\t\nCONTENT;\n$val = \"{$input->name}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<\/label>\n\t\t\t\t\t\t\t<div class='ipsSideMenu ipsSideMenu_withRadios' data-ipsSideMenu id='elCustomDateChoices_\nCONTENT;\n$return .= htmlentities( $input->name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_sideMenu'>\n\t\t\t\t\t\t\t\t<h3 class='ipsSideMenu_mainTitle ipsAreaBackground_reset ipsType_medium'>\n\t\t\t\t\t\t\t\t\t<a href='#elCustomDateChoices_\nCONTENT;\n$return .= htmlentities( $input->name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_sideMenu' class='ipsPad_double' data-action='openSideMenu'><i class='fa fa-bars'><\/i> &nbsp;\nCONTENT;\n$val = \"{$input->name}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n&nbsp;<i class='fa fa-caret-down'><\/i><\/a>\n\t\t\t\t\t\t\t\t<\/h3>\n\t\t\t\t\t\t\t\t<ol class='ipsSideMenu_list'>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nforeach ( $input->options['options'] as $k => $v ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t<li class='ipsSideMenu_item \nCONTENT;\n\nif ( $input->value == $k ):\n$return .= <<<CONTENT\nipsSideMenu_itemActive\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n \nCONTENT;\n\nif ( $k === 'custom' ):\n$return .= <<<CONTENT\nipsJS_hide\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n' data-ipsMenuValue=\"\nCONTENT;\n$return .= htmlentities( $k, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\t\t\t\t\t\t\t\t\t\t\t<input type='radio' name='\nCONTENT;\n$return .= htmlentities( $input->name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' value='\nCONTENT;\n$return .= htmlentities( $k, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' \nCONTENT;\n\nif ( $input->value == $k ):\n$return .= <<<CONTENT\nchecked\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n class='ipsJS_hide'>\n\t\t\t\t\t\t\t\t\t\t\t<a href='#'>\n\t\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n$val = \"search_{$k}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $k === 'custom' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t<br><span class='ipsType_reset ipsType_small ipsType_light ipsHide' data-role=\"datePreview\"><\/span>\n\t\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $input->value === 'custom' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t<li class=\"ipsSideMenu_item ipsSideMenu_itemActive\" data-ipsmenuvalue=\"custom\">\n\t\t\t\t\t\t\t\t\t\t\t<input type=\"radio\" name=\"\nCONTENT;\n$return .= htmlentities( $input->name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" value=\"custom\" class='ipsJS_hide'>\n\t\t\t\t\t\t\t\t\t\t\t<a href=\"#\">\n\t\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'search_custom', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\t<br><span class=\"ipsType_reset ipsType_small ipsType_light ipsHide\" data-role=\"datePreview\" style=\"display:inline\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\n$k = $input->name === 'startDate' ? 'start' : 'updated';$afterKey = \"{$k}_after\"; $beforeKey = \"{$k}_before\";\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( \\IPS\\Request::i()->$beforeKey and \\IPS\\Request::i()->$afterKey ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n$sprintf = array(\\IPS\\DateTime::ts(\\IPS\\Request::i()->$beforeKey)->localeDate(),\\IPS\\DateTime::ts(\\IPS\\Request::i()->$afterKey)->localeDate()); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'search_betweenXandX', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nelseif ( \\IPS\\Request::i()->$beforeKey ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n$sprintf = array(\\IPS\\DateTime::ts(\\IPS\\Request::i()->$beforeKey)->localeDate()); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'search_beforeX', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nelseif ( \\IPS\\Request::i()->$afterKey ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n$sprintf = array(\\IPS\\DateTime::ts(\\IPS\\Request::i()->$afterKey)->localeDate()); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'search_afterX', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\t<\/span>\n\t\t\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<\/ol>\n\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\nCONTENT;\n\nelseif ( in_array( $input->name, array( 'startDateCustom', 'updatedDateCustom' ) ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<div id='elCustomDate_\nCONTENT;\n$return .= htmlentities( $input->name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_menu' class='ipsMenu ipsMenu_normal ipsHide' data-dateType='\nCONTENT;\n$return .= htmlentities( $input->name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-controller='core.front.search.date'>\n\t\t\t\t\t\t\t<div class='ipsPad'>\n\t\t\t\t\t\t\t\t<span class='ipsType_normal ipsType_light'>\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'between', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span><br>\n\t\t\t\t\t\t\t\t<input type='date' name='\nCONTENT;\n$return .= htmlentities( $input->name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[start]' data-control='date' data-role='start' value='\nCONTENT;\n$return .= htmlentities( $input->value['start'], ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'><br>\n\t\t\t\t\t\t\t\t<span class='ipsType_normal ipsType_light'>\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'and', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span><br>\n\t\t\t\t\t\t\t\t<input type='date' name='\nCONTENT;\n$return .= htmlentities( $input->name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[end]' data-control='date' data-role='end' value='\nCONTENT;\n$return .= htmlentities( $input->value['end'], ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\t\t\t\t\t\t\t\t<hr class='ipsHr'>\n\t\t\t\t\t\t\t\t<button type='button' class='ipsButton ipsButton_primary ipsButton_small ipsButton_fullWidth' data-action='ok'>OK<\/button>\n\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<noscript>\n\t\t\t\t\t\t\t{$input->html()}\n\t\t\t\t\t\t<\/noscript>\n\t\t\t\t\t\nCONTENT;\n\nelseif ( $input instanceof \\IPS\\Helpers\\Form\\Node and ( !\\IPS\\Request::i()->type or $input->htmlId !== \\IPS\\Request::i()->type . '_node' ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<!-- hidden until the filter is chosen -->\n\t\t\t\t\t\nCONTENT;\n\nelseif ( $input->name === 'q' or ( \\IPS\\Request::i()->type !== 'core_members' and mb_strpos( $input->name, 'core_pfield_' ) !== 0 ) ):\n$return .= <<<CONTENT\n\t\t\t\t\t\t\n\t\t\t\t\t\t{$input->rowHtml($form)}\n\t\t\t\t\t\nCONTENT;\n\nelseif ( ( mb_strpos( $input->name, 'core_pfield_' ) === 0 or $input->name == 'group' ) AND \\IPS\\Request::i()->type == 'core_members'  ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t{$input->rowHtml($form)}\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t<\/ul>\n\t<div id='elSearchUpdate' data-ipsSticky data-ipsSticky-stickTo='bottom' data-ipsSticky-width=\"#elSearch_sidebar\">\n\t\t<button type=\"submit\" class=\"ipsButton ipsButton_large ipsButton_primary ipsButton_fullWidth\" id='elSearchButton' disabled><i class='fa fa-refresh'><\/i> &nbsp;\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'update_results', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/button>\n\t<\/div>\n<\/form>\nCONTENT;\n\t\treturn $return;\n}\n\n\tfunction globalSearchMenuOptions(  ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\nCONTENT;\n\nforeach ( \\IPS\\Output::i()->globalSearchMenuOptions() as $type => $name ):\n$return .= <<<CONTENT\n\n\t<li class='ipsMenu_item' data-ipsMenuValue='\nCONTENT;\n$return .= htmlentities( $type, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\t\t<a href='#'>\nCONTENT;\n$val = \"{$name}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t<\/li>\n\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n<li class='ipsMenu_sep'><hr><\/li>\nCONTENT;\n\t\treturn $return;\n}\n\n\tfunction member( $member ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n<li class=\"ipsDataItem ipsClearfix\">\n\t<div class='ipsDataItem_icon ipsType_center'>\n\t\t\nCONTENT;\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \\IPS\\Request::i()->app )->userPhoto( $member, 'mini' );\n$return .= <<<CONTENT\n\n\t<\/div>\n\t<div class='ipsDataItem_main'>\n\t\t<h4 class='ipsDataItem_title ipsType_break ipsType_sectionHead'>\n\t\t\t{$member->link()}<\/a>\n\t\t<\/h4>\n\t\t<p class='ipsType_normal'>\n\t\t\t\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'joined', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n \nCONTENT;\n$val = ( $member->joined instanceof \\IPS\\DateTime ) ? $member->joined : \\IPS\\DateTime::ts( $member->joined );$return .= $val->html();\n$return .= <<<CONTENT\n &middot; {$member->groupName}\n\t\t<\/p>\n\t<\/div>\n<\/li>\n\nCONTENT;\n\t\treturn $return;\n}\n\n\tfunction resultStream( $results, $pagination, $baseUrl ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n<div class=\"ipsButtonBar ipsPad_half ipsClearfix ipsClear\">\n\t\nCONTENT;\n\nif ( $pagination ):\n$return .= <<<CONTENT\n\n\t\t{$pagination}\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<ul class=\"ipsButtonRow ipsPos_right ipsClearfix\">\n\t\t<li>\n\t\t\t<a href=\"#elSortByMenu_menu\" id=\"elSortByMenu_search_results\" data-role=\"sortButton\" data-ipsMenu data-ipsMenu-activeClass=\"ipsButtonRow_active\" data-ipsMenu-selectable=\"radio\">\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'sort_by', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n <i class=\"fa fa-caret-down\"><\/i><\/a>\n\t\t\t<ul class=\"ipsMenu ipsMenu_auto ipsMenu_withStem ipsMenu_selectable ipsHide\" id=\"elSortByMenu_search_results_menu\">\n\t\t\t\t\nCONTENT;\n\nif ( !isset( \\IPS\\Request::i()->type ) OR \\IPS\\Request::i()->type != 'core_members' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<li class=\"ipsMenu_item\nCONTENT;\n\nif ( \\IPS\\Request::i()->sortby == 'newest' ):\n$return .= <<<CONTENT\n ipsMenu_itemChecked\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\" data-sortDirection='desc'><a href=\"\nCONTENT;\n$return .= htmlentities( $baseUrl->setQueryString( array( 'sortby' => 'newest', 'page' => 1 ) ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'date', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t<li class=\"ipsMenu_item\nCONTENT;\n\nif ( \\IPS\\Request::i()->sortby == 'relevancy' || !isset( \\IPS\\Request::i()->sortby ) ):\n$return .= <<<CONTENT\n ipsMenu_itemChecked\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\" data-sortDirection='desc'><a href=\"\nCONTENT;\n$return .= htmlentities( $baseUrl->setQueryString( array( 'sortby' => 'relevancy', 'page' => 1 ) ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'sort_relevancy', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t<li class=\"ipsMenu_item\nCONTENT;\n\nif ( \\IPS\\Request::i()->sortby == 'joined' ):\n$return .= <<<CONTENT\n ipsMenu_itemChecked\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\" data-sortDirection='desc'><a href=\"\nCONTENT;\n$return .= htmlentities( $baseUrl->setQueryString( array( 'sortby' => 'joined', 'sortdirection' => 'desc', 'page' => 1 ) ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'sort_joined', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t<li class=\"ipsMenu_item\nCONTENT;\n\nif ( \\IPS\\Request::i()->sortby == 'name' || !isset( \\IPS\\Request::i()->sortby ) ):\n$return .= <<<CONTENT\n ipsMenu_itemChecked\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\" data-sortDirection='asc'><a href=\"\nCONTENT;\n$return .= htmlentities( $baseUrl->setQueryString( array( 'sortby' => 'name', 'sortdirection' => 'asc', 'page' => 1 ) ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'sort_mname', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t<li class=\"ipsMenu_item\nCONTENT;\n\nif ( \\IPS\\Request::i()->sortby == 'member_posts' ):\n$return .= <<<CONTENT\n ipsMenu_itemChecked\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\" data-sortDirection='desc'><a href=\"\nCONTENT;\n$return .= htmlentities( $baseUrl->setQueryString( array( 'sortby' => 'member_posts', 'sortdirection' => 'desc', 'page' => 1 ) ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'sort_posts', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t<li class=\"ipsMenu_item\nCONTENT;\n\nif ( \\IPS\\Request::i()->sortby == 'pp_reputation_points' ):\n$return .= <<<CONTENT\n ipsMenu_itemChecked\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\" data-sortDirection='desc'><a href=\"\nCONTENT;\n$return .= htmlentities( $baseUrl->setQueryString( array( 'sortby' => 'pp_reputation_points', 'sortdirection' => 'desc', 'page' => 1 ) ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'sort_reputation', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<\/ul>\n\t\t<\/li>\t\n\t<\/ul>\n<\/div>\n\nCONTENT;\n\nif ( count( $results )  ):\n$return .= <<<CONTENT\n\n\t<ol class=\"ipsDataList ipsClear ipsDataList_large cSearchResults\">\n\t\t\nCONTENT;\n\nforeach ( $results as $result ):\n$return .= <<<CONTENT\n\n\t\t\t{$result->searchResultHtml()}\n\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t<\/ol>\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t<div class='ipsType_center ipsPad'>\n\t\t<p class='ipsType_large ipsType_light'>\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'no_rows_in_table', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n\t<\/div>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( $pagination ):\n$return .= <<<CONTENT\n\n\t<div class=\"ipsButtonBar ipsPad_half ipsClearfix ipsClear\">\n\t\t{$pagination}\n\t<\/div>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\t\treturn $return;\n}\n\n\tfunction results( $term, $title, $results, $pagination, $baseUrl ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n<p class='ipsResponsive_hideDesktop ipsResponsive_block'>\n\t<a href='#' data-action='filterBarSwitch' data-switchTo='filterBar' class='ipsButton ipsButton_verySmall ipsButton_light'><i class='fa fa-caret-left'><\/i> <i class='fa fa-navicon'><\/i> &nbsp;\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'search_filters', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n<\/p>\n\n\nCONTENT;\n\nif ( !$term and \\IPS\\Request::i()->type !== 'core_members' ):\n$return .= <<<CONTENT\n\n\t<div class='ipsType_center ipsPad ipsBox'>\n\t\t<p class='ipsType_center ipsType_large ipsType_light'>\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'no_search_term', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n\t<\/div>\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t<h1 class='ipsType_sectionHead'>\nCONTENT;\n$return .= htmlentities( $title, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/h1>\n\t<p class='ipsType_reset ipsType_light'>\nCONTENT;\n$pluralize = array( $results->count( TRUE ) ); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'search_found', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'pluralize' => $pluralize ) );\n$return .= <<<CONTENT\n<\/p>\n\t<br>\n\t\nCONTENT;\n\nif ( count( $results ) > 0 ):\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\n$term = str_replace('\"', '', $term );\n$return .= <<<CONTENT\n\n\t\t<div data-controller='core.front.search.results' data-term=\"\nCONTENT;\n$return .= htmlentities( $term, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" data-role=\"resultsArea\">\n\t\t\t<div class='ipsBox'>\n\t\t\t\t<p class='ipsType_sectionTitle ipsType_reset'>\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'search_results', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n\t\t\t\t\nCONTENT;\n$return .= \\IPS\\Theme::i()->getTemplate( \"search\", \\IPS\\Request::i()->app )->resultStream( $results, $pagination, $baseUrl );\n$return .= <<<CONTENT\n\n\t\t\t<\/div>\n\t\t<\/div>\n\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t<div class='ipsType_center ipsPad ipsBox'>\n\t\t\t<p class='ipsType_center ipsType_large ipsType_light'>\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'no_search_results', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n\t\t<\/div>\t\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\t\treturn $return;\n}\n\n\tfunction search( $term, $title, $results, $pagination, $baseUrl, $types, $filters ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div class='ipsResponsive_hidePhone ipsResponsive_block'>\n\t\nCONTENT;\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->pageHeader( \\IPS\\Member::loggedIn()->language()->addToStack('search_the_community') );\n$return .= <<<CONTENT\n\n<\/div>\n\n<div class=\"ipsColumns ipsColumns_collapsePhone\" data-ipsFilterBar data-ipsFilterBar-on='phone,tablet' data-ipsFilterBar-viewDefault='filterContent' data-controller='core.front.search.main' data-baseURL='\nCONTENT;\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=search&controller=search\", null, \"search\", array(), 0 ) );\n$return .= <<<CONTENT\n'>\n\t<div class=\"ipsColumn ipsColumn_wide\"  data-role='filterBar'>\n\t\t<h2 class='ipsType_sectionTitle ipsType_reset ipsResponsive_showPhone ipsResponsive_block'>\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'search_filters', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h2>\n\t\t<div class='ipsPad ipsAreaBackground_light ipsFieldRow' id=\"elSearch_sidebar\">\n\t\t\t<label class=\"ipsFieldRow_label\" for=\"author\">\n\t\t\t\t\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'searchType', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t<\/label>\n\t\t\t<div class='ipsSideMenu' data-ipsSideMenu id='elSearch_appFilter'>\n\t\t\t\t<h3 class='ipsSideMenu_mainTitle ipsAreaBackground_reset ipsType_medium'>\n\t\t\t\t\t<a href='#elSearch_appFilter' class='ipsPad_double' data-action='openSideMenu'><i class='fa fa-bars'><\/i> &nbsp;\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'searchType', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n&nbsp;<i class='fa fa-caret-down'><\/i><\/a>\n\t\t\t\t<\/h3>\n\t\t\t\t<ul class='ipsSideMenu_list ipsSideMenu_withRadios ipsType_normal'>\n\t\t\t\t\t<li class='ipsSideMenu_item \nCONTENT;\n\nif ( !\\IPS\\Request::i()->type ):\n$return .= <<<CONTENT\nipsSideMenu_itemActive\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n' data-ipsMenuValue=''>\n\t\t\t\t\t\t<a href='\nCONTENT;\n$return .= htmlentities( $baseUrl->stripQueryString( 'type' ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' title=\"\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'search_everything', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\">\nCONTENT;\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'search_everything', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t<\/li>\n\t\t\t\t\t\nCONTENT;\n\nforeach ( $types as $k => $class ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<li class='ipsSideMenu_item \nCONTENT;\n\nif ( \\IPS\\Request::i()->type == $k ):\n$return .= <<<CONTENT\nipsSideMenu_itemActive\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n' data-ipsMenuValue='\nCONTENT;\n$return .= htmlentities( $k, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\t\t\t\t\t\t\t<a href='\nCONTENT;\n$return .= htmlentities( $baseUrl->setQueryString( array( 'type' => $k, 'page' => NULL ) ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' title=\"\nCONTENT;\n$sprintf = array($term, mb_strtolower( \\IPS\\Member::loggedIn()->language()->addToStack( $k . '_pl' ) )); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'search_results_title_term_area', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n\">\nCONTENT;\n$val = \"{$k}_pl\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t<\/ul>\n\t\t\t<\/div>\n\t\t\t<div data-role='searchFilters'>\n\t\t\t\t{$filters}\n\t\t\t<\/div>\n\t\t<\/div>\n\t<\/div>\n\t<div id=\"elSearch_main\" class=\"ipsColumn ipsColumn_fluid\" data-role='filterContent'>\n\t\t\nCONTENT;\n$return .= \\IPS\\Theme::i()->getTemplate( \"search\", \\IPS\\Request::i()->app )->results( $term, $title, $results, $pagination, $baseUrl );\n$return .= <<<CONTENT\n\n\t<\/div>\n<\/div>\n\nCONTENT;\n\t\treturn $return;\n}}"